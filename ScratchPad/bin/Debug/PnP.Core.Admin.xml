<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PnP.Core.Admin</name>
    </assembly>
    <members>
        <member name="T:PnP.Core.Services.IPnPContextExtensions">
            <summary>
            Extends the <see cref="T:PnP.Core.Services.PnPContext"/> with additional functionality
            </summary>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetSharePointAdmin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with SharePoint admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin"/> instance enabling SharePoint admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetSiteCollectionManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with site collection admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetTeamManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with Teams admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetTenantAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with tenant Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ITenantAppManager"/> instance enabling tenant app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetSiteCollectionAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with site collection Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAppManager"/> instance enabling site collection app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensions.GetMicrosoft365Admin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with Microsoft 365 admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin"/> instance enabling Microsoft 365 admin operations</returns>
        </member>
        <member name="T:PnP.Core.Services.PnPContextExtensions">
            <summary>
            Extends the <see cref="T:PnP.Core.Services.PnPContext"/> with additional functionality
            </summary>
        </member>
        <member name="P:PnP.Core.Services.PnPContextExtensions.Implementation">
            <summary>
            Allows you to replace the default implementation of <see cref="T:PnP.Core.Services.IPnPContextExtensions"/> with your own implementation.
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.RevertToDefaultImplementation">
            <summary>
            When you've replaced the default implementation of <see cref="T:PnP.Core.Services.IPnPContextExtensions"/> with your own, you can use this method to revert back to the default implementation.
            </summary>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetSharePointAdmin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with SharePoint admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin"/> instance enabling SharePoint admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetSiteCollectionManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with site collection admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetTeamManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.PnPContext"/> with Teams admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.PnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetTenantAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.PnPContext"/> with tenant Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.PnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ITenantAppManager"/> instance enabling tenant app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetSiteCollectionAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.PnPContext"/> with site collection Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.PnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAppManager"/> instance enabling site collection app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.PnPContextExtensions.GetMicrosoft365Admin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.PnPContext"/> with Microsoft 365 admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.PnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin"/> instance enabling Microsoft 365 admin operations</returns>
        </member>
        <member name="T:PnP.Core.Services.IPnPContextExtensionsImplementation">
            <summary>
            Extends the <see cref="T:PnP.Core.Services.IPnPContext"/> with additional functionality
            </summary>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetSharePointAdmin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with SharePoint admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin"/> instance enabling SharePoint admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetSiteCollectionManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with site collection admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetTeamManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with Teams admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager"/> instance enabling site collection admin operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetTenantAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with tenant Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ITenantAppManager"/> instance enabling tenant app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetSiteCollectionAppManager(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with site collection Application Lifecycle Management (ALM) functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAppManager"/> instance enabling site collection app catalog operations</returns>
        </member>
        <member name="M:PnP.Core.Services.IPnPContextExtensionsImplementation.GetMicrosoft365Admin(PnP.Core.Services.IPnPContext)">
            <summary>
            Extends a <see cref="T:PnP.Core.Services.IPnPContext"/> with Microsoft 365 admin functionality
            </summary>
            <param name="context"><see cref="T:PnP.Core.Services.IPnPContext"/> to extend</param>
            <returns>An <see cref="T:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin"/> instance enabling Microsoft 365 admin operations</returns>
        </member>
        <member name="T:PnP.Core.Services.SharePointRestErrorExtensions">
            <summary>
            Extends the <see cref="T:PnP.Core.SharePointRestError"/> with additional functionality
            </summary>
        </member>
        <member name="M:PnP.Core.Services.SharePointRestErrorExtensions.IsCannotGetSiteException(PnP.Core.SharePointRestServiceException)">
            <summary>
            Extends a <see cref="T:PnP.Core.SharePointRestServiceException"/> with if a site is accesable
            </summary>
            <param name="ex"><see cref="T:PnP.Core.SharePointRestServiceException"/> to extend</param>
            <returns>An <see cref="T:System.Boolean"/> if a site is accesable</returns>
        </member>
        <member name="M:PnP.Core.Services.SharePointRestErrorExtensions.IsUnableToAccessSiteException(PnP.Core.SharePointRestServiceException)">
            <summary>
            Extends a <see cref="T:PnP.Core.SharePointRestServiceException"/> with if a context has access to the site
            </summary>
            <param name="ex"><see cref="T:PnP.Core.SharePointRestServiceException"/> to extend</param>
            <returns>An <see cref="T:System.Boolean"/> bool if has access</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasRoleAsync(System.String)">
            <summary>
            Checks if the current access token holds the requested role
            </summary>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasRole(System.String)">
            <summary>
            Checks if the current access token holds the requested role
            </summary>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasRole(System.String,System.String)">
            <summary>
            Checks if the provided access token holds the requested role
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasScopeAsync(System.String)">
            <summary>
            Checks if the current access token holds the requested scope
            </summary>
            <param name="scope">Scopee to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasScope(System.String)">
            <summary>
            Checks if the current access token holds the requested scope
            </summary>
            <param name="scope">Scope to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenHasScope(System.String,System.String)">
            <summary>
            Checks if the provided access token holds the requested scope
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <param name="scope">Scope to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenUsesApplicationPermissionsAsync">
            <summary>
            Checks if the current access token uses application permissions
            </summary>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenUsesApplicationPermissions">
            <summary>
            Checks if the current access token uses application permissions
            </summary>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.Microsoft365Admin.AccessTokenUsesApplicationPermissions(System.String)">
            <summary>
            Checks if the provided access token uses application permissions
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.GeoLocation">
            <summary>
            Microsoft 365 Geo Locations
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.APC">
            <summary>
            Asia-Pacific
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.AUS">
            <summary>
            Australia
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.BRA">
            <summary>
            Brazil
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.CAN">
            <summary>
            Canada
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.EUR">
            <summary>
            Europe / Middle East / Africa
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.FRA">
            <summary>
            France
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.DEU">
            <summary>
            Germany
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.IND">
            <summary>
            India
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.JPN">
            <summary>
            Japan
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.KOR">
            <summary>
            Korea
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.NAM">
            <summary>
            North America
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.NOR">
            <summary>
            Norway
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.ZAF">
            <summary>
            South Africa
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.CHE">
            <summary>
            Zwitserland
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.ARE">
            <summary>
            United Arab Emirates
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.GBR">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.QAT">
            <summary>
            Qatar
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.Microsoft365.GeoLocation.SWE">
            <summary>
            Sweden
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.IGeoLocationInformation">
            <summary>
            Contains information about a geo location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.IGeoLocationInformation.DataLocationCode">
            <summary>
            Data location code for the geo location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.IGeoLocationInformation.SharePointPortalUrl">
            <summary>
            SharePoint portal url for the geo location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.IGeoLocationInformation.SharePointAdminUrl">
            <summary>
            SharePoint Admin site url for the geo location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.IGeoLocationInformation.SharePointMySiteUrl">
            <summary>
            SharePoint My site url for the geo location
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin">
            <summary>
            Microsoft 365 Admin features
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.CreateGroupAsync(PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions,PnP.Core.Admin.Model.Microsoft365.CreationOptions)">
            <summary>
            Create a Microsoft 365 Group
            </summary>
            <param name="graphGroupOptions">Options that define the Microsoft 365 Group to create</param>
            <param name="creationOptions">Options that control the group creation process</param>
            <returns>PnPContext for the SharePoint site linked the new group</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.CreateGroup(PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions,PnP.Core.Admin.Model.Microsoft365.CreationOptions)">
            <summary>
            Create a Microsoft 365 Group
            </summary>
            <param name="graphGroupOptions">Options that define the Microsoft 365 Group to create</param>
            <param name="creationOptions">Options that control the group creation process</param>
            <returns>PnPContext for the SharePoint site linked the new group</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GroupExistsAsync(System.String)">
            <summary>
            Check if a Microsoft 365 group exists
            </summary>
            <param name="mailNickName">Microsoft 365 group alias to check for</param>
            <returns>True if the group exists, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GroupExists(System.String)">
            <summary>
            Check if a Microsoft 365 group exists
            </summary>
            <param name="mailNickName">Microsoft 365 group alias to check for</param>
            <returns>True if the group exists, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.IsMultiGeoTenantAsync">
            <summary>
            Checks if this tenant is a multi-geo tenant
            </summary>
            <returns>True if multi-geo, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.IsMultiGeoTenant">
            <summary>
            Checks if this tenant is a multi-geo tenant
            </summary>
            <returns>True if multi-geo, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GetMultiGeoLocationsAsync">
            <summary>
            Returns a list of multi-geo locations for this tenant
            </summary>
            <returns>List of multi-geo locations if multi-geo, null otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GetMultiGeoLocations">
            <summary>
            Returns a list of multi-geo locations for this tenant
            </summary>
            <returns>List of multi-geo locations if multi-geo, null otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasRoleAsync(System.String)">
            <summary>
            Checks if the current access token holds the requested role
            </summary>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasRole(System.String)">
            <summary>
            Checks if the current access token holds the requested role
            </summary>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasRole(System.String,System.String)">
            <summary>
            Checks if the provided access token holds the requested role
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <param name="role">Role to check for</param>
            <returns>True if the token has the role, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasScopeAsync(System.String)">
            <summary>
            Checks if the current access token holds the requested scope
            </summary>
            <param name="scope">Scopee to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasScope(System.String)">
            <summary>
            Checks if the current access token holds the requested scope
            </summary>
            <param name="scope">Scope to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenHasScope(System.String,System.String)">
            <summary>
            Checks if the provided access token holds the requested scope
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <param name="scope">Scope to check for</param>
            <returns>True if the token has the scope, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenUsesApplicationPermissionsAsync">
            <summary>
            Checks if the current access token uses application permissions
            </summary>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenUsesApplicationPermissions">
            <summary>
            Checks if the current access token uses application permissions
            </summary>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.AccessTokenUsesApplicationPermissions(System.String)">
            <summary>
            Checks if the provided access token uses application permissions
            </summary>
            <param name="accessToken">Accesstoken to inspect</param>
            <returns>True if using application permissions, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GetSensitivityLabelsAsync">
            <summary>
            Get the available sensitivity labels for the calling user or application
            </summary>
            <returns>List of sensitivity labels</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.Microsoft365.IMicrosoft365Admin.GetSensitivityLabels">
            <summary>
            Get the available sensitivity labels for the calling user or application
            </summary>
            <returns>List of sensitivity labels</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel">
            <summary>
            A Microsoft 365 sensitivity label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.Id">
            <summary>
            Id of the sensitivity label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.Name">
            <summary>
            Name of the sensitivity label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.Description">
            <summary>
            Description of the sensitivity label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.IsActive">
            <summary>
            Is this the sensitivity label active?
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.Tooltip">
            <summary>
            Tooltip to use if this label is used in a user interface
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.ISensitivityLabel.Sensitivity">
            <summary>
            The sensitivity setting for this label
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.CreationOptions">
            <summary>
            Options to control a creation flow
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.CreationOptions.MaxStatusChecks">
            <summary>
            Number of times to check for provisioning complete status. Defaults to 10 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.CreationOptions.WaitAfterStatusCheck">
            <summary>
            Defines the wait time in seconds after a status check. Defaults to 1 if not set.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions">
            <summary>
            Contains the available options for creating a group with Graph Api
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.DisplayName">
            <summary>
            Name of the Microsoft 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.Description">
            <summary>
            Description of the Microsoft 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.MailEnabled">
            <summary>
            Is this group mail enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.MailNickname">
            <summary>
            Mail nickname of this Microsoft 365 group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.Classification">
            <summary>
            Classification of this group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.Visibility">
            <summary>
            Visibility of this group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.GroupTypes">
            <summary>
            Group types
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.Owners">
            <summary>
            Owners data, list of UPN's of the users who need to be added as owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.Members">
            <summary>
            Members data, list of UPN's of the users who need to be added as owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.PreferredDataLocation">
            <summary>
            Preferred data location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.SecurityEnabled">
            <summary>
            If it is a security enabled group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Microsoft365.GraphGroupOptions.ResourceBehaviorOptions">
            <summary>
            Allows defining the resource behavior options for the group
            See https://learn.microsoft.com/en-us/graph/group-set-options#configure-groups
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.ExecuteWithDisposeAsync``1(PnP.Core.Services.PnPContext,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Executes an action and disposes <see cref="T:PnP.Core.Services.PnPContext" /> if it's not the current context
            </summary>
            <typeparam name="P">The type param is resolved automatically based on the action return type.</typeparam>
            <param name="pnpContext">A <see cref="T:PnP.Core.Services.PnPContext" /> instance, which will be disposed.</param>
            <param name="action">An action delegate.</param>
            <returns>A value, which is returned from action delegate.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.GetByIdWithRetryAsync(System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets an instance of the app by it's unique id with retry mechanism (if the app is not yet available in the app catalog).
            </summary>
            <param name="id">A unique id of the app.</param>
            <param name="waitSeconds">Seconds to wait betwen retries.</param>
            <param name="retryCount">Retry count.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.GetTenantAppCatalogContextIfNeededAsync(PnP.Core.Admin.Model.SharePoint.AppManager{`0}.AppManagerAction)">
            <summary>
            Creates a new instance of tenant app catalog context for some operations (Deploy, Retract, Remove).
            </summary>
            <param name="action">Current action.</param>
            <returns>A <see cref="T:PnP.Core.Services.PnPContext" /> instance.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.GetTenantAppCatalogContextAsync">
            <summary>
            Gets tenant app catalog context. If the current context is already a tenant app catalog context, then returns the current context.
            </summary>
            <returns>A <see cref="T:PnP.Core.Services.PnPContext" /> instance.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.ExecuteAppActionAsync(System.Guid,PnP.Core.Admin.Model.SharePoint.AppManager{`0}.AppManagerAction,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Generic method to execute an action like Deploy, Install, etc.
            </summary>
            <param name="id">A unique app id.</param>
            <param name="action">Action of type <see cref="T:PnP.Core.Admin.Model.SharePoint.AppManager`1.AppManagerAction"/> </param>
            <param name="postObject">Optional dictionary with HTTP POST parameters.</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.GetModelFromJson``1(System.String)">
            <summary>
            Extracts model from json.
            </summary>
            <typeparam name="TModel">TModel is an interface with the <see cref="T:PnP.Core.Model.ConcreteTypeAttribute"/> attribute.</typeparam>
            <param name="json">JSON string.</param>
            <returns>An instance of the object, which implements TModel interface.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.AppManager`1.GetModelListFromJson``1(System.String)">
            <summary>
            Extracts model list from json.
            </summary>
            <typeparam name="TModel">TModel is an interface with the <see cref="T:PnP.Core.Model.ConcreteTypeAttribute"/> attribute.</typeparam>
            <param name="json">JSON string.</param>
            <returns>A list of the objects, which implements TModel interface.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.SiteCollectionEnumerator.GetViaTenantAdminHiddenListAsync(PnP.Core.Services.PnPContext,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter,System.Int32)">
            <summary>
            Enumerating site collections by querying a hidden list in SharePoint tenant admin. Only works when using 
            application permissions with Sites.Read.All or higher or when the user has read access to SharePoint tenant admin,
            which is the case for global SharePoint administrators
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.SiteCollectionEnumerator.GetWithDetailsViaTenantAdminHiddenListAsync(PnP.Core.Services.PnPContext,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,System.Boolean,System.Int32)">
            <summary>
            Enumerating site collections by querying a hidden list in SharePoint tenant admin. Only works when using 
            application permissions with Sites.Read.All or higher or when the user has read access to SharePoint tenant admin,
            which is the case for global SharePoint administrators
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.SiteCollectionEnumerator.GetViaGraphSitesApiAsync(PnP.Core.Services.PnPContext,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter)">
            <summary>
            Enumerating site collections using Graph Sites endpoint. Only works when using application permissions with Sites.Read.All or higher!
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.SiteCollectionEnumerator.GetViaGraphSearchApiAsync(PnP.Core.Services.PnPContext,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter,System.Int32)">
            <summary>
            Enumerating site collections using Graph Search endpoint. Only works when using delegated permissions!
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.AnonymousLinkType">
            <summary>
            Indicates whether an anonymous link (also known as share-by-link) should be included
            in an invitation, and if so, what permissions should be granted via that link.  
            The anonymous link will be created once the invitation is created
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AnonymousLinkType.None">
            <summary>
            No anonymous link is desired
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AnonymousLinkType.View">
            <summary>
            A view only anonymous link
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AnonymousLinkType.Edit">
            <summary>
            A read/write anonymous link
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.AppViewsPolicy">
            <summary>
            Indicates whether app views are disabled in all the webs of this site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AppViewsPolicy.Unknown">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AppViewsPolicy.Disabled">
            <summary>
            Indicates that app views are disabled in all the webs of this site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.AppViewsPolicy.NotDisabled">
            <summary>
            Indicates that app views may be enabled in some of the webs of this site
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.BlockDownloadLinksFileTypes">
            <summary>
            Specifies the types of files that can be displayed when the block download links feature is being used
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.BlockDownloadLinksFileTypes.WebPreviewableFiles">
            <summary>
            Web previewable files only
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.BlockDownloadLinksFileTypes.ServerRenderedFilesOnly">
            <summary>
            Server rendered files only
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CommunicationSiteDesign">
            <summary>
            Default sites designs to be applied to communication sites
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CommunicationSiteDesign.Topic">
            <summary>
            Topic site design
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CommunicationSiteDesign.Showcase">
            <summary>
            Showcase site design
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CommunicationSiteDesign.Blank">
            <summary>
            Blank site design
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CompanyWideSharingLinksPolicy">
            <summary>
            Indicates whether company wide sharing links are disabled in all the webs of this site. 
            </summary>
            <remarks>
            Note that while this property being Disabled guarantees that no company wide sharing links
            are available in any of the child webs, the opposite is not the case. In other words, if this property
            is NotDisabled, it does not guarantee that company wide sharing links are available in all of the child
            webs. That decision is left up to the individual webs.
            </remarks>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CompanyWideSharingLinksPolicy.Unknown">
            <summary>
            Internally used
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CompanyWideSharingLinksPolicy.Disabled">
            <summary>
            Indicates that company wide sharing links are disabled in all the webs of this site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.CompanyWideSharingLinksPolicy.NotDisabled">
            <summary>
            Indicates that company wide sharing links may be enabled in some of the webs of this site
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.DenyAddAndCustomizePagesStatus">
            <summary>
            Represents the status of DenyAddAndCustomizePages on a site collection.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.DenyAddAndCustomizePagesStatus.Unknown">
            <summary>
            Value is unknown
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.DenyAddAndCustomizePagesStatus.Disabled">
            <summary>
            DenyAddAndCustomizePages is disabled
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.DenyAddAndCustomizePagesStatus.Enabled">
            <summary>
            DenyAddAndCustomizePages is enabled
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.FlowsPolicy">
            <summary>
            Indicates whether flows are disabled in all the webs of this site
            </summary>
            <remarks>
            Note that while this property being Disabled guarantees that no flows
            are available in any of the child webs, the opposite is not the case. In other words, if this property
            is NotDisabled, it does not guarantee that flows are available in all of the child
            webs. That decision is left up to the individual webs.
            </remarks>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.FlowsPolicy.Unknown">
            <summary>
            Internal use
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.FlowsPolicy.Disabled">
            <summary>
            Indicates that flows are disabled in all the webs of this site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.FlowsPolicy.NotDisabled">
            <summary>
            Indicates that flows may be enabled in some of the webs of this site
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ImageTaggingChoice">
            <summary>
            Contains the values of the 3 allowed states for image tagging
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ImageTaggingChoice.Disabled">
            <summary>
            The image tagging option for the tenant is disabled
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ImageTaggingChoice.Basic">
            <summary>
            The image tagging option for the tenant is basic
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ImageTaggingChoice.Enhanced">
            <summary>
            The image tagging option for the tenant is enhanced
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.Language">
            <summary>
            SharePoint Online languages
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Default">
            <summary>
            Use default tenant language
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Arabic">
            <summary>
            Arabic
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Azerbaijani">
            <summary>
            Azerbaijani
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Basque">
            <summary>
            Basque
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Bosnian">
            <summary>
            Bosnian (Latin)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Bulgarian">
            <summary>
            Bulgarian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Catalan">
            <summary>
            Catalan
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.ChineseSimplified">
            <summary>
            Chinese (Simplified)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.ChineseTraditional">
            <summary>
            Chinese (Traditional)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Croatian">
            <summary>
            Croatian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Czech">
            <summary>
            Czech
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Danish">
            <summary>
            Danish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Dari">
            <summary>
            Dari
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Dutch">
            <summary>
            Dutch
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Estonian">
            <summary>
            Estonian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Finnish">
            <summary>
            Finnish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.French">
            <summary>
            French
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Galician">
            <summary>
            Galician
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.German">
            <summary>
            German
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Greek">
            <summary>
            Greek
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Hebrew">
            <summary>
            Hebrew
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Hindi">
            <summary>
            Hindi
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Hungarian">
            <summary>
            Hungarian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Indonesian">
            <summary>
            Indonesian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Irish">
            <summary>
            Irish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Italian">
            <summary>
            Italian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Japanese">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Kazakh">
            <summary>
            Kazakh
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Korean">
            <summary>
            Korean
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Latvian">
            <summary>
            Latvian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Lithuanian">
            <summary>
            Lithuanian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Macedonian">
            <summary>
            Macedonian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Malay">
            <summary>
            Malay
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Norwegian">
            <summary>
            Norwegian (Bokmål)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Polish">
            <summary>
            Polish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.PortugueseBrazil">
            <summary>
            Portuguese (Brazil)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.PortuguesePortugal">
            <summary>
            Portuguese (Portugal)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Romanian">
            <summary>
            Romanian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Russian">
            <summary>
            Russian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.SerbianCyrillic">
            <summary>
            Serbian (Cyrillic, Serbia)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.SerbianLatinSerbia">
            <summary>
            Serbian (Latin, Serbia)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.SerbianLatin">
            <summary>
            Serbian (Latin)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Slovak">
            <summary>
            Slovak
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Slovenian">
            <summary>
            Slovenian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Swedish">
            <summary>
            Swedish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Thai">
            <summary>
            Thai
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Turkish">
            <summary>
            Turkish
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Ukrainian">
            <summary>
            Ukrainian
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Vietnamese">
            <summary>
            Vietnamese
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Language.Welsh">
            <summary>
            Welsh
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight">
            <summary>
            Right that an <see cref="T:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal"/> can have on a site collection
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight.FullControl">
            <summary>
            Full control right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight.Manage">
            <summary>
            Manage right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight.Write">
            <summary>
            Write right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight.Read">
            <summary>
            Read right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacySiteCollectionPermissionRight.Guest">
            <summary>
            Guest right
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight">
            <summary>
            Right that an <see cref="T:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal"/> can have on the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.FullControl">
            <summary>
            Full control right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.Manage">
            <summary>
            Manage right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.Write">
            <summary>
            Write right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.Read">
            <summary>
            Read right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.Guests">
            <summary>
            Guest right
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.QueryAsUserIgnoreAppPrincipal">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.SubmitStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.BypassDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.AllRights">
            <summary>
            
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.LegacyTenantPermissionRight.Elevate">
            <summary>
            
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.MediaTranscriptionPolicyType">
            <summary>
            Defines the media transcription policy type values
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.MediaTranscriptionPolicyType.Enabled">
            <summary>
            When enabled, all users on the tenant are able to request transcription on all
            media files they have edit permissions to
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.MediaTranscriptionPolicyType.Disabled">
            <summary>
            Transcription is disabled
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.NullableBool">
            <summary>
            Integer value to reprenting nullable bool
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.NullableBool.NotSet">
            <summary>
            Value was not set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.NullableBool.True">
            <summary>
            Value is true
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.NullableBool.False">
            <summary>
            Value is false
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ObjectCharacterRecognitionMode">
            <summary>
            Contains the values of the 3 allowed options for Object Character Recognition
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ObjectCharacterRecognitionMode.Disabled">
            <summary>
            State 0: Disabled. OCR for the tenant is disabled. Default
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ObjectCharacterRecognitionMode.InclusionList">
            <summary>
            State 1: InclusionList. OCR for the tenant is filtered to a list of included items
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.ObjectCharacterRecognitionMode.ExclusionList">
            <summary>
            State 2: ExclusionList. OCR for the tenant is filtered to a list of excluded items
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.PWAEnabledStatus">
            <summary>
            Represents the status of EnableProjectWebInstance on a site collection.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.PWAEnabledStatus.Unknown">
            <summary>
            Default value, Project Web App status was never set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.PWAEnabledStatus.Disabled">
            <summary>
            The project web app is disabled for this site collection
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.PWAEnabledStatus.Enabled">
            <summary>
            The project web app is enabled for this site collection
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.RestrictedToRegion">
            <summary>
            Represents the status of RestrictedToRegion on a site collection
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.RestrictedToRegion.NoRestriction">
            <summary>
            No restrictions set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.RestrictedToRegion.BlockMoveOnly">
            <summary>
            Only site move is blocked
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.RestrictedToRegion.BlockFull">
            <summary>
            Site move is blocked, also full file content is not cached cross-region
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.RestrictedToRegion.Unknown">
            <summary>
            Default value, means the property was never set
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SensitiveByDefaultState">
            <summary>
            Contains the values of the 2 allowed states for MarkNewFileSensitiveByDefault
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SensitiveByDefaultState.AllowExternalSharing">
            <summary>
            Allows external sharing, default
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SensitiveByDefaultState.BlockExternalSharing">
            <summary>
            Blocks external sharing
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource">
            <summary>
            Defines the possible sources from where a SharePoint AddIn can be acquiredd
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.Marketplace">
            <summary>
            Marketplace
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.CorporateCatalog">
            <summary>
            CorporateCatalog
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.DeveloperSite">
            <summary>
            DeveloperSite
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.ObjectModel">
            <summary>
            ObjectModel
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.RemoteObjectModel">
            <summary>
            RemoteObjectModel
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.SiteCollectionCorporateCatalog">
            <summary>
            SiteCollectionCorporateCatalog
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInSource.InvalidSource">
            <summary>
            InvalidSource
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus">
            <summary>
            Defines the statuses of a SharePoint AddIn
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Installed">
            <summary>
            Instaled
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Installing">
            <summary>
            Installing
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Uninstalling">
            <summary>
            Uninstalling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Upgrading">
            <summary>
            Upgrading
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Recycling">
            <summary>
            Recycling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.InvalidStatus">
            <summary>
            Invalid status
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Canceling">
            <summary>
            Canceling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Initialized">
            <summary>
            Initialized
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.UpgradeCanceling">
            <summary>
            UpgradeCanceling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Disabling">
            <summary>
            Disabling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.SecretRolling">
            <summary>
            SecretRolling
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.Restoring">
            <summary>
            Restoring
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharePointAddInStatus.RestoreCanceling">
            <summary>
            RestoreCanceling
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingCapabilities">
            <summary>
            Specifies what type of external user and guest link sharing is enabled for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingCapabilities.Disabled">
            <summary>
            External user sharing (share by email) and guest link sharing are both disabled for all site collections 
            in the tenant.  No new external user invitations or sharing links can be created, and any content previously 
            shared becomes inaccessible to external users.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingCapabilities.ExternalUserSharingOnly">
            <summary>
            External user sharing is enabled for the tenancy, but guest link sharing is disabled.  Each individual 
            site collection's sharing properties govern whether the site collection has sharing disabled or allows 
            external user sharing, but a site collection cannot enable guest link sharing.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingCapabilities.ExternalUserAndGuestSharing">
            <summary>
            External user sharing and guest link sharing are enabled for the tenant. Each individual site 
            collection's sharing properties govern whether the site collection has sharing disabled, allows external user 
            sharing only, or allows both external user sharing and guest link sharing.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingCapabilities.ExistingExternalUserSharingOnly">
            <summary>
            External user sharing and guest link sharing are both disabled for the tenant, but AllowGuestUserSignIn is enabled.
            Each individual site collection's sharing properties govern whether the site collection has sharing disabled or allows
            existing external user signing in, but a site collection cannot enable guest link sharing and cannot share with new external users.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingDomainRestrictionModes">
            <summary>
            Specifies what type of restriction mode is enabled for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingDomainRestrictionModes.None">
            <summary>
            No restriction mode is enable for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingDomainRestrictionModes.AllowList">
            <summary>
            Allowed domain list is enabled for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingDomainRestrictionModes.BlockList">
            <summary>
            Blocked domain list is enabled for the tenant
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingLinkType">
            <summary>
            Specifies the type of default sharing link for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingLinkType.None">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingLinkType.Direct">
            <summary>
            Restricted sharing link
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingLinkType.Internal">
            <summary>
            OrganizationEdit sharing link
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingLinkType.AnonymousAccess">
            <summary>
            AnonymousEdit sharing link
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingPermissionType">
            <summary>
            Specifies the type of default link permission for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingPermissionType.None">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingPermissionType.View">
            <summary>
            View sharing link permission
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingPermissionType.Edit">
            <summary>
            Edit sharing link permission
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingScope">
            <summary>
            The intended audience width of a sharing link
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingScope.Uninitialized">
            <summary>
            Not initialized
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingScope.Anyone">
            <summary>
            Anyone could have permission
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingScope.Organization">
            <summary>
            Only people within the organization could have permission
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingScope.SpecificPeople">
            <summary>
            Only people specified in the permission could have permission
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SharingState">
            <summary>
            Contains the possible values for the default sharing state
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingState.Unspecified">
            <summary>
            Implies that the Tenant Admin is choosing to let Site and Web Owners specify the behavior for Sharing Property State
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingState.On">
            <summary>
            Implies that Tenant Admin is forcing Sharing Property State to behave as if they are set to True
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SharingState.Off">
            <summary>
            Implies that Tenant Admin is forcing Sharing Property State to behave as if they are set to False
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter">
            <summary>
            Defines which site collections need to be returned by the site collection enumeration methods
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter.Default">
            <summary>
            Default filter, currently comes down to all regular site collections and personal site collections (= OneDrive for Business)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter.ExcludePersonalSites">
            <summary>
            Skip personal sites (ODB)
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter.OnlyPersonalSites">
            <summary>
            Return only personal sites (ODB)
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SiteUserInfoVisibilityPolicyValue">
            <summary>
            Indicates what the state of the browse user info policy in the site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteUserInfoVisibilityPolicyValue.OrganizationDefault">
            <summary>
            Respect the tenant's default policy for Block User Info visibility
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteUserInfoVisibilityPolicyValue.ApplyToNoUsers">
            <summary>
            Do not apply Block User Info visibility policy to anyone
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SiteUserInfoVisibilityPolicyValue.ApplyToGuestAndExternalUsers">
            <summary>
            Apply Block User Info visibility policy to guest and external users
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SPBlockDownloadFileTypeId">
            <summary>
            Defines the FileTypeId values.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPBlockDownloadFileTypeId.TeamsMeetingRecording">
            <summary>
            Filetypeid for teams meeting recording.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SpecialCharactersState">
            <summary>
            Contains the values of the 3 allowed states for Special Characters
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SpecialCharactersState.NoPreference">
            <summary>
            Setting was not set
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SpecialCharactersState.Allowed">
            <summary>
            Special characters like #,% are allowed in the names of files and folders
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SpecialCharactersState.Disallowed">
            <summary>
            Special characters like #,% are not allowed in the names of files and folders
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SPOConditionalAccessPolicyType">
            <summary>
            Specifies what type of SPO conditional access policy is enabled for the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOConditionalAccessPolicyType.AllowFullAccess">
            <summary>
            No conditional access policy is enabled for the tenant.
            No AAD policy is enabled and both SPO-BlockDownloadOfViewableFilesOnUnmanagedDevicesPolicy and 
            SPO-BlockDownloadOfAllFilesOnUnmanagedDevicesPolicy in SPO are disabled.
            End users have the full access to the content.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOConditionalAccessPolicyType.AllowLimitedAccess">
            <summary>
            Limited access is enabled for the tenant.
            We create AAD limited access policy and enable SPO-BlockDownloadOfViewableFilesOnUnmanagedDevicesPolicy in SPO. 
            End users get limited access experience when they access to the content.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOConditionalAccessPolicyType.BlockAccess">
            <summary>
            Block access is enabled for the tenant.
            We create AAD block access policy and enable SPO-BlockDownloadOfAllFilesOnUnmanagedDevicesPolicy in SPO. 
            End users would be blocked sign-in by AAD.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOConditionalAccessPolicyType.AuthenticationContext">
            <summary>
            Authentication Context is enabled for the site.
            We create AAD Authentication context policy and enable it in SPO by running this command:
            Set-SPOSite - ConditionalAccessPolicy AuthenticationContext -AuthenticationContextName "Contos MFA"
            The user will be redirected to AAD to evaluate this policy if
            the policy is enabled.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SPOLimitedAccessFileType">
            <summary>
            Specifies what type of files can be viewed when the AllowLimitedAccess is set as the ConditionalAccessPolicy
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOLimitedAccessFileType.OfficeOnlineFilesOnly">
            <summary>
            Users affected by the limited access policy can only view Office Online files
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOLimitedAccessFileType.WebPreviewableFiles">
            <summary>
            Users affected by the limited access policy can view Office Online files and
            files which are previewed through the media service
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOLimitedAccessFileType.OtherFiles">
            <summary>
            Users affected by the limited access policy can view all files types with
            browser viewers and download any files without previewers
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SPOTlsTokenBindingPolicyValue">
            <summary>
            Enumerates the various TLS token binding policy settings
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOTlsTokenBindingPolicyValue.None">
            <summary>
            There are no settings for this policy
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOTlsTokenBindingPolicyValue.Audit">
            <summary>
            Emit audit logs, no token binding enforcement.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOTlsTokenBindingPolicyValue.PassiveEnforcement">
            <summary>
            Bound sessions are evaluated and rejected upon failure, but
            unbound sessions are allowed access.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPOTlsTokenBindingPolicyValue.StrictEnforcement">
            <summary>
            Bound sessions are evaluated and rejected upon failure,
            unbound sessions are rejected.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SPResilienceModeType">
            <summary>
            Defines the Resilience Mode type values.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPResilienceModeType.DefaultAAD">
            <summary>
            Resilence Mode has same value as AAD.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPResilienceModeType.Enabled">
            <summary>
            When enabled, Resilence features are enabled during AAD outage.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.SPResilienceModeType.Disabled">
            <summary>
            When disabled, Resilence features are disabled during AAD outage.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.TeamsChannelTypeValue">
            <summary>
            Indicates the type of TeamsCannel a site is connected to
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TeamsChannelTypeValue.None">
            <summary>
            This site is not connected to a teams channel.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TeamsChannelTypeValue.PrivateChannel">
            <summary>
            This site is connected to a Teams private channel.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TeamsChannelTypeValue.SharedChannel">
            <summary>
            This site is connected to a Teams shared channel.
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TeamsChannelTypeValue.StandardChannel">
            <summary>
            This site is connected to a Teams standard channel.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.TenantBrowseUserInfoPolicyValue">
            <summary>
            Indicates what the state of the browse user info policy in the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TenantBrowseUserInfoPolicyValue.ApplyToNoUsers">
            <summary>
            Do not apply Block User Info visibility policy to anyone
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TenantBrowseUserInfoPolicyValue.ApplyToGuestAndExternalUsers">
            <summary>
            Apply Block User Info visibility policy to guest and external users
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.TimeZone">
            <summary>
            Timezones to use when creating sitecollections
            Format UTC[PLUS|MINUS][HH:MM]_[DESCRIPTION]
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.None">
            <summary>
            No Timezone
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTC_GREENWICH_MEAN_TIME_DUBLIN_EDINBURGH_LISBON_LONDON">
            <summary>
            Timezone for GREENWICH, DUBLIN, EDINBURGH, LISBON and LONDON
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0100_BRUSSELS_COPENHAGEN_MADRID_PARIS">
            <summary>
            Timezone for BRUSSELS, COPENHAGEN, MADRID and PARIS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0100_AMSTERDAM_BERLIN_BERN_ROME_STOCKHOLM_VIENNA">
            <summary>
            Timezone for AMSTERDAM, BERLIN, BERN, ROME, STOCKHOLM and VIENNA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_ATHENS_BUCHAREST_ISTANBUL">
            <summary>
            Timezone for ATHENS, BUCHAREST and ISTANBUL
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0100_BELGRADE_BRATISLAVA_BUDAPEST_LJUBLJANA_PRAGUE">
            <summary>
            Timezone for BELGRADE, BRATISLAVA, BUDAPEST, LJUBLJANA and PRAGUE
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_MINSK">
            <summary>
            Timezone for MINSK 
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0300_BRASILIA">
            <summary>
            Timezone for BRASILIA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0400_ATLANTIC_TIME_CANADA">
            <summary>
            Timezone for ATLANTIC CANADA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0500_EASTERN_TIME_US_AND_CANADA">
            <summary>
            Timezone for EASTERN US and CANADA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0600_CENTRAL_TIME_US_AND_CANADA">
            <summary>
            Timezone for CENTRAL US and CANADA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0700_MOUNTAIN_TIME_US_AND_CANADA">
            <summary>
            Timezone for MOUNTAIN US and CANADA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0800_PACIFIC_TIME_US_AND_CANADA">
            <summary>
            Timezone for PACIFIC US and CANADA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0900_ALASKA">
            <summary>
            Timezone for ALASKA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS1000_HAWAII">
            <summary>
            Timezone for HAWAII
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS1100_MIDWAY_ISLAND_SAMOA">
            <summary>
            Timezone for MIDWAY ISLAND and SAMOA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1200_AUCKLAND_WELLINGTON">
            <summary>
            Timezone for AUCKLAND and WELLINGTON
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1000_BRISBANE">
            <summary>
            Timezone for BRISBANE
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0930_ADELAIDE">
            <summary>
            Timezone for ADELAIDE
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0900_OSAKA_SAPPORO_TOKYO">
            <summary>
            Timezone for OSAKA, SAPPORO and TOKYO
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0800_KUALA_LUMPUR_SINGAPORE">
            <summary>
            Timezone for KUALA LUMPUR and SINGAPORE
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0700_BANGKOK_HANOI_JAKARTA">
            <summary>
            Timezone for BANGKOK, HANOI and JAKARTA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0530_CHENNAI_KOLKATA_MUMBAI_NEW_DELHI">
            <summary>
            Timezone for CHENNAI, KOLKATA, MUMBAI and NEW DELHI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0400_ABU_DHABI_MUSCAT">
            <summary>
            Timezone for ABU DHABI and MUSCAT
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0330_TEHRAN">
            <summary>
            Timezone for TEHRAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0300_BAGHDAD">
            <summary>
            Timezone for BAGHDAD
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_JERUSALEM">
            <summary>
            Timezone for JERUSALEM
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0330_NEWFOUNDLAND_AND_LABRADOR">
            <summary>
            Timezone for NEWFOUNDLAND and LABRADOR
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0100_AZORES">
            <summary>
            Timezone for AZORES
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0200_MID_ATLANTIC">
            <summary>
            Timezone for MIDATLANTIC
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTC_MONROVIA">
            <summary>
            Timezone for MONROVIA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0300_CAYENNE">
            <summary>
            Timezone for CAYENNE
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0400_GEORGETOWN_LA_PAZ_SAN_JUAN">
            <summary>
            Timezone for GEORGETOWN and LA PAZ - SAN JUAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0500_INDIANA_EAST">
            <summary>
            Timezone for INDIANA EAST
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0500_BOGOTA_LIMA_QUITO">
            <summary>
            Timezone for BOGOTA, LIMA and QUITO
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0600_SASKATCHEWAN">
            <summary>
            Timezone for SASKATCHEWAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0600_GUADALAJARA_MEXICO_CITY_MONTERREY">
            <summary>
            Timezone for GUADALAJARA, MEXICO CITY and MONTERREY
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0700_ARIZONA">
            <summary>
            Timezone for ARIZONA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS1200_INTERNATIONAL_DATE_LINE_WEST">
            <summary>
            Timezone for INTERNATIONAL DATE LINE WEST
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1200_FIJI_ISLANDS_MARSHALL_ISLANDS">
            <summary>
            Timezone for FIJI ISLANDS and MARSHALL ISLAND
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1100_MADAGAN_SOLOMON_ISLANDS_NEW_CALENDONIA">
            <summary>
            Timezone for MADAGAN, SOLOMON ISLANDS and NEW CALENDONIA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1000_HOBART">
            <summary>
            Timezone for HOBART
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1000_GUAM_PORT_MORESBY">
            <summary>
            Timezone for GUAM and PORT MORESBY
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0930_DARWIN">
            <summary>
            Timezone for DARWIN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0800_BEIJING_CHONGQING_HONG_KONG_SAR_URUMQI">
            <summary>
            Timezone for BEIJING, CHONGQING, HONG KONG and SAR URUMQI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0600_NOVOSIBIRSK">
            <summary>
            Timezone for NOVOSIBIRSK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0500_TASHKENT">
            <summary>
            Timezone for TASHKENT
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0430_KABUL">
            <summary>
            Timezone for KABUL
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_CAIRO">
            <summary>
            Timezone for CAIRO
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_HARARE_PRETORIA">
            <summary>
            Timezone for HARARE and PRETORIA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0300_MOSCOW_STPETERSBURG_VOLGOGRAD">
            <summary>
            Timezone for MOSCOW, ST PETERSBURG and VOLGOGRAD
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0100_CAPE_VERDE_ISLANDS">
            <summary>
            Timezone for CAPE VERDE ISLANDS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0400_BAKU">
            <summary>
            Timezone for BAKU
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0600_CENTRAL_AMERICA">
            <summary>
            Timezone for CENTRAL AMERICA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0300_NAIROBI">
            <summary>
            Timezone for NAIROBI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0100_SARAJEVO_SKOPJE_WARSAW_ZAGREB">
            <summary>
            Timezone for SARAJEVO, SKOPJE, WARSAW and ZAGREB
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0500_EKATERINBURG">
            <summary>
            Timezone for EKATERINBURG
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS">
            <summary>
            Timezone for HELSINKI, KYIV, RIGA, SOFIA, TALLINN and VILNIUS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0300_GREENLAND">
            <summary>
            Timezone for GREENLAND
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0630_YANGON_RANGOON">
            <summary>
            Timezone for YANGON and RANGOON
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0545_KATHMANDU">
            <summary>
            Timezone for KATHMANDU
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0800_IRKUTSK">
            <summary>
            Timezone for IRKUTSK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0700_KRASNOYARSK">
            <summary>
            Timezone for KRASNOYARSK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0400_SANTIAGO">
            <summary>
            Timezone for SANTIAGO
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0530_SRI_JAYAWARDENEPURA">
            <summary>
            Timezone for SRI JAYAWARDENEPURA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1300_NUKU_ALOFA">
            <summary>
            Timezone for NUKU and ALOFA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1000_VLADIVOSTOK">
            <summary>
            Timezone for VLADIVOSTOK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0100_WEST_CENTRAL_AFRICA">
            <summary>
            Timezone for WEST CENTRAL AFRICA 
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0900_YAKUTSK">
            <summary>
            Timezone for YAKUTSK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0600_ASTANA_DHAKA">
            <summary>
            Timezone for ASTANA and DHAKA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0900_SEOUL">
            <summary>
            Timezone for SEOUL 
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0800_PERTH">
            <summary>
            Timezone for PERTH
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0300_KUWAIT_RIYADH">
            <summary>
            Timezone for KUWAIT and RIYADH
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0800_TAIPEI">
            <summary>
            Timezone for TAIPEI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1000_CANBERRA_MELBOURNE_SYDNEY">
            <summary>
            Timezone for CANBERRA, MELBOURNE and SYDNEY
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0700_CHIHUAHUA_LA_PAZ_MAZATLAN">
            <summary>
            Timezone for CHIHUAHUA and LA PAZ - MAZATLAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0800_TIJUANA_BAJA_CALFORNIA">
            <summary>
            Timezone for TIJUANA, BAJA and CALFORNIA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_AMMAN">
            <summary>
            Timezone for AMMAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_BEIRUT">
            <summary>
            Timezone for BEIRUT
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0400_MANAUS">
            <summary>
            Timezone for MANAUS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0400_TBILISI">
            <summary>
            Timezone for TBILISI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0200_WINDHOEK">
            <summary>
            Timezone for WINDHOEK
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0400_YEREVAN">
            <summary>
            Timezone for YEREVAN
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0300_BUENOS_AIRES">
            <summary>
            Timezone for BUENOS AIRES
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTC_CASABLANCA">
            <summary>
            Timezone for CASABLANCA
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0500_ISLAMABAD_KARACHI">
            <summary>
            Timezone for ISLAMABAD and KARACHI
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0430_CARACAS">
            <summary>
            Timezone for CARACAS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS0400_PORT_LOUIS">
            <summary>
            Timezone for PORT LOUIS
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0300_MONTEVIDEO">
            <summary>
            Timezone for MONTEVIDEO
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0400_ASUNCION">
            <summary>
            Timezone for ASUNCION
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCPLUS1200_PETROPAVLOVSK_KACHATSKY">
            <summary>
            Timezone for PETROPAVLOVSK and KACHATSKY
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTC_COORDINATED_UNIVERSAL_TIME">
            <summary>
            COORDINATED UNIVERSAL TIME
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.TimeZone.UTCMINUS0800_ULAANBAATAR">
            <summary>
            Timezone for ULAANBAATAR
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.Workflows2013State">
            <summary>
            Specifies the state of Workflows 2013 in the tenant
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Workflows2013State.Disabled">
            <summary>
            Workflow 2013 is disabled
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Workflows2013State.Configuring">
            <summary>
            The workflow 2013 status is being configured
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.Model.SharePoint.Workflows2013State.Enabled">
            <summary>
            Workflow 2013 is enabled
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IACSPrincipal">
            <summary>
            Describes an Azure ACS principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IACSPrincipal.AppId">
            <summary>
            Id of the app in Azure AD
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IACSPrincipal.RedirectUri">
            <summary>
            Redirect URI used by the app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IACSPrincipal.AppDomains">
            <summary>
            App domains used by the app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IACSPrincipal.ValidUntil">
            <summary>
            Principal is valid until. This value is only populated when using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipalsAsync(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> method
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IApp">
            <summary>
            Represents a base interface for an app stored either in tenant or site collection app catalog.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.Id">
            <summary>
            Unique ID of the library list item of the app.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.Title">
            <summary>
            Title of the app.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.AadAppId">
            <summary>
            Azure Active Directory Id of the SharePoint Online Client Extensibility Web Application Principal.
            It's not empty if your SPFx solution requests any AAD permissions.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.AadPermissions">
            <summary>
            The list of Azure Active Directory permissions your SPFx solution requests.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.AppCatalogVersion">
            <summary>
            Returns version of the app in the app catalog.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.CanUpgrade">
            <summary>
            Returns whether an existing instance of the app can be upgraded.
            True if there's newer version available in the app catalog compared to the instance in the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.CDNLocation">
            <summary>
            Returns the url of CDN if your app is hosted on CDN. If it's hosted inside SharePoint, it returns "SharePoint Online".
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.ContainsTenantWideExtension">
            <summary>
            Indicates whether your app contains tenant wide extensions.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.CurrentVersionDeployed">
            <summary>
            Indicates whether the current version of the app is deployed.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.Deployed">
            <summary>
            Indicates whether the app has been deployed to the context site.
            True if particular app has been installed to the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.ErrorMessage">
            <summary>
            Contains an error message if the app contains any problems during deployment.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.InstalledVersion">
            <summary>
            Returns a version of the installed app in the site context.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.IsClientSideSolution">
            <summary>
            Indicates whether the app is SharePoint Framework client-side solution.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.IsEnabled">
            <summary>
            Whether the app is enabled.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.IsPackageDefaultSkipFeatureDeployment">
            <summary>
            Returns true, if the app's config (./config/package-solution.json) contains "skipFeatureDeployment" setting and it's set to true.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.IsValidAppPackage">
            <summary>
            Indicates whether the app package is valid.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.ProductId">
            <summary>
            The app's product id.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.ShortDescription">
            <summary>
            The short description of the app.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.SkipDeploymentFeature">
            <summary>
            Returns true, if the app was globally deployed.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IApp.ThumbnailUrl">
            <summary>
            The thumbnail url of the app.
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Deploy(System.Boolean)">
            <summary>
            Deploys / trusts an app in the app catalog.
            </summary>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment for tenant scoped apps.</param>
            <returns><em>true</em> if deployment was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.DeployAsync(System.Boolean)">
            <summary>
            Deploys / trusts an app in the app catalog.
            </summary>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment for tenant scoped apps.</param>
            <returns><em>true</em> if deployment was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Retract">
            <summary>
            Retracts the app in the app catalog. Notice that this will not remove the app from the app catalog.
            </summary>
            <returns><em>true</em> if retract was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.RetractAsync">
            <summary>
            Retracts the app in the app catalog. Notice that this will not remove the app from the app catalog.
            </summary>
            <returns><em>true</em> if retract was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Remove">
            <summary>
            Removes the app from the app catalog.
            </summary>
            <returns><em>true</em> if remove was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.RemoveAsync">
            <summary>
            Removes the app from the app catalog.
            </summary>
            <returns><em>true</em> if remove was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Install">
            <summary>
            Installs the app from the app catalog in a site.
            </summary>
            <returns><em>true</em> if installation was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.InstallAsync">
            <summary>
            Installs the app from the app catalog in a site.
            </summary>
            <returns><em>true</em> if installation was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Upgrade">
            <summary>
            Upgrades the app in a site.
            </summary>
            <returns><em>true</em> if upgrade was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.UpgradeAsync">
            <summary>
            Upgrades the app in a site.
            </summary>
            <returns><em>true</em> if upgrade was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.Uninstall">
            <summary>
            Uninstalls the app from a site.
            </summary>
            <returns><em>true</em> if uninstall was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IApp.UninstallAsync">
            <summary>
            Uninstalls the app from a site.
            </summary>
            <returns><em>true</em> if uninstall was successful.</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IAppCatalogSite">
            <summary>
            Metadata for a site collection catalog response.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IAppCatalogSite.AbsoluteUrl">
            <summary>
            The absolute URL for a site collection app catalog.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IAppCatalogSite.SiteID">
            <summary>
            The site collection id of a site collection app catalog.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IAppManager`1">
            <summary>
            App Admin features
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailable(System.Guid)">
            <summary>
            Gets available app by it's unique id.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailableAsync(System.Guid)">
            <summary>
            Gets available app by it's unique id.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailable(System.String)">
            <summary>
            Gets available app by it's title.
            </summary>
            <param name="title">An app's title.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailableAsync(System.String)">
            <summary>
            Gets available app by it's title.
            </summary>
            <param name="title">An app's title.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailable">
            <summary>
            Gets all available apps from the app catalog.
            </summary>
            <returns>A collection of apps.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.GetAvailableAsync">
            <summary>
            Gets all available apps from the app catalog.
            </summary>
            <returns>A collection of apps.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.Add(System.Byte[],System.String,System.Boolean)">
            <summary>
            Uploads a file to the app catalog.
            </summary>
            <param name="file">A byte array containing the file.</param>
            <param name="fileName">The filename (e.g. myapp.sppkg) of the file to upload.</param>
            <param name="overwrite">If true will overwrite an existing entry.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.AddAsync(System.Byte[],System.String,System.Boolean)">
            <summary>
            Uploads a file to the app catalog.
            </summary>
            <param name="file">A byte array containing the file.</param>
            <param name="fileName">The filename (e.g. myapp.sppkg) of the file to upload.</param>
            <param name="overwrite">If true will overwrite an existing entry.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.Add(System.String,System.Boolean)">
            <summary>
            Uploads an app file to the app catalog.
            </summary>
            <param name="path"></param>
            <param name="overwrite">If true will overwrite an existing entry.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppManager`1.AddAsync(System.String,System.Boolean)">
            <summary>
            Uploads an app file to the app catalog.
            </summary>
            <param name="path"></param>
            <param name="overwrite">If true will overwrite an existing entry.</param>
            <returns>An instance of the app.</returns>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IAppManager`1.ServicePrincipal">
            <summary>
            Get the SharePoint Apps Service Principal enabling you to approve/reject permissions requests
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IAppOperations">
            <summary>
            Interface for base app operations, like Deploy, Install, etc.
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Deploy(System.Guid,System.Boolean)">
            <summary>
            Deploys / trusts an app in the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment for tenant scoped apps.</param>
            <returns><em>true</em> if deployment was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.DeployAsync(System.Guid,System.Boolean)">
            <summary>
            Deploys / trusts an app in the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment for tenant scoped apps.</param>
            <returns><em>true</em> if deployment was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Retract(System.Guid)">
            <summary>
            Retracts the app in the app catalog. Notice that this will not remove the app from the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if retract was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.RetractAsync(System.Guid)">
            <summary>
            Retracts the app in the app catalog. Notice that this will not remove the app from the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if retract was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Remove(System.Guid)">
            <summary>
            Removes the app from the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if remove was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.RemoveAsync(System.Guid)">
            <summary>
            Removes the app from the app catalog.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if remove was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Install(System.Guid)">
            <summary>
            Installs the app from the app catalog in a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if installation was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.InstallAsync(System.Guid)">
            <summary>
            Installs the app from the app catalog in a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if installation was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Upgrade(System.Guid)">
            <summary>
            Upgrades the app in a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if upgrade was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.UpgradeAsync(System.Guid)">
            <summary>
            Upgrades the app in a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if upgrade was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.Uninstall(System.Guid)">
            <summary>
            Uninstalls the app from a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if uninstall was successful.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IAppOperations.UninstallAsync(System.Guid)">
            <summary>
            Uninstalls the app from a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if uninstall was successful.</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal">
            <summary>
            Defines a legacy principal used by either Azure ACS or SharePoint AddIns
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.AppIdentifier">
            <summary>
            Identifier of the legacy principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.ServerRelativeUrl">
            <summary>
            The server relative url of the <see cref="T:PnP.Core.Model.SharePoint.IWeb"/> where the legacy principal is located
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.Title">
            <summary>
            Title of the legacy principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.AllowAppOnly">
            <summary>
            Can this legacy principal use app-only (application permissions)?
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.SiteCollectionScopedPermissions">
            <summary>
            List of site collection scoped permissions for this legacy principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal.TenantScopedPermissions">
            <summary>
            List of tenant scoped permissions for this legacy principal
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal">
            <summary>
            Service principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal.AppId">
            <summary>
            Azure App Id for this principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal.AppIdentifier">
            <summary>
            Identifier of the legacy principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal.Name">
            <summary>
            Name of the legacy principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal.ValidUntil">
            <summary>
            When does this principal expire
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ILegacySiteCollectionPermission">
            <summary>
            Defines the permissions a legacy principal (<see cref="T:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal"/>) has on a site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacySiteCollectionPermission.SiteId">
            <summary>
            Site collection for which the permissions is granted
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacySiteCollectionPermission.WebId">
            <summary>
            Web for which the permissions is granted. If empty guid then the permissions is granted on the site collection level
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacySiteCollectionPermission.ListId">
            <summary>
            List for which the permissions is granted. If empty guid then the permissions is granted on the web or site collection level
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacySiteCollectionPermission.Right">
            <summary>
            The granted right
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ILegacyTenantPermission">
            <summary>
            Defines the permissions a legacy principal (<see cref="T:PnP.Core.Admin.Model.SharePoint.ILegacyPrincipal"/>) has on the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyTenantPermission.ProductFeature">
            <summary>
            The feature name of the permissions (Taxonomy/ Social/ ProjectServer/ Search/ BcsConnection/ Content)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyTenantPermission.Scope">
            <summary>
            The scope of the permission. E.g. content/tenant or projectserver/projects
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyTenantPermission.Right">
            <summary>
            The granted right
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ILegacyTenantPermission.ResourceId">
            <summary>
            The specific resource id given to the app. For example, if the permission given to the specific project server, then this is the project server id. 
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IPermissionGrant">
            <summary>
            A permission grant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.ClientId">
            <summary>
            ClientId
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.ConsentType">
            <summary>
            Type of consent
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.IsDomainIsolated">
            <summary>
            Domain Isolation
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.ObjectId">
            <summary>
            The object id
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.PackageName">
            <summary>
            Name of the package
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.Resource">
            <summary>
            The requested resource
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.ResourceId">
            <summary>
            Id of the requested resource
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionGrant.Scope">
            <summary>
            Permission scope
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IPermissionRequest">
            <summary>
            A permission request on the SharePoint apps principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.IsDomainIsolated">
            <summary>
            Domain Isolation
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.IsolatedDomainUrl">
            <summary>
            The isolated domain url
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.MultiTenantAppId">
            <summary>
            App id of a multi-tenant app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.MultiTenantAppReplyUrl">
            <summary>
            The reply url of the multi-tenant app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.PackageApproverName">
            <summary>
            Name of the package approver
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.PackageName">
            <summary>
            Name of the package
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.PackageVersion">
            <summary>
            Version of the package
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.Resource">
            <summary>
            The requested resource
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.ResourceId">
            <summary>
            Id of the requested resource
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.Scope">
            <summary>
            Permission scope
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IPermissionRequest.TimeRequested">
            <summary>
            Requested timestamp
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection">
            <summary>
            Defines a site collection living in the tenant's recyle bin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.Id">
            <summary>
            The id of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.Url">
            <summary>
            The URL of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.Name">
            <summary>
            Name of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.GroupId">
            <summary>
            The id of the connected Microsoft 365 group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.TimeCreated">
            <summary>
            Date time when this site collection was created
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.TimeDeleted">
            <summary>
            Date time when this site collection was deleted
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.CreatedBy">
            <summary>
            The user that created this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.DeletedBy">
            <summary>
            The user that deleted this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.SiteOwnerName">
            <summary>
            Returns the name of the site collection owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.SiteOwnerEmail">
            <summary>
            Returns the email address of teh site collection owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.StorageQuota">
            <summary>
            The storage quota in bytes for this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.StorageUsed">
            <summary>
            The storage quota used for this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IRecycledSiteCollection.TemplateName">
            <summary>
            The name of the applied template
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IServicePrincipal">
            <summary>
            Manage the SharePoint apps service principal
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.ApprovePermissionRequest(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Approves the specified permission request
            </summary>
            <param name="id">permission request id</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>permission grant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.ApprovePermissionRequestAsync(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Approves the specified permission request
            </summary>
            <param name="id">permission request id</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>permission grant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.DenyPermissionRequest(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Denies the specified permission request
            </summary>
            <param name="id">permission request id</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.DenyPermissionRequestAsync(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Denies the specified permission request
            </summary>
            <param name="id">permission request id</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.GetPermissionRequests(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Lists pending permission requests
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.GetPermissionRequestsAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Lists pending permission requests
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.EnableAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Enable the Service Principal
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.Enable(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Enable the Service Principal
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.DisableAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Disable the Service Principal
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.Disable(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Disable the Service Principal
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of permission requests</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.ListGrantsAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Lists all granted Permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of granted permissions</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.ListGrants(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Lists all granted Permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the list of granted permissions</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.AddGrantAsync(System.String,System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Grants a Permission
            </summary>
            <param name="resource">Resource of the permission</param>
            <param name="scope">Scope of the permission</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the new permission grant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.AddGrant(System.String,System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Grants a Permission
            </summary>
            <param name="resource">Resource of the permission</param>
            <param name="scope">Scope of the permission</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the new permission grant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.RevokeGrantAsync(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Revokes a Permission
            </summary>
            <param name="objectId">Object Id of the permission</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the revoked permission grant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.IServicePrincipal.RevokeGrant(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Revokes a Permission
            </summary>
            <param name="objectId">Object Id of the permission</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>the revoked permission grant</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IServicePrincipalProperties">
            <summary>
            Properties of the SharePoint Service Principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IServicePrincipalProperties.AccountEnabled">
            <summary>
            Service principal enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IServicePrincipalProperties.AppId">
            <summary>
            Client/App Id of the principal
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IServicePrincipalProperties.ReplyUrls">
            <summary>
            Allowed reply urls 
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn">
            <summary>
            Describes the properties of a SharePoint AddIn when installed in a site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.AppInstanceId">
            <summary>
            Instance ID of this app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.AppSource">
            <summary>
            The source of this addin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.AppWebFullUrl">
            <summary>
            The full URL of the app web created by the addin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.AppWebId">
            <summary>
            Id of the app web created by the addin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.AssetId">
            <summary>
            The id of the app in the office store, this will be empty for user uploaded apps
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.CreationTime">
            <summary>
            Date and time when the addin was installed
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.InstalledBy">
            <summary>
            Name of the user who installed the addin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.InstalledSiteId">
            <summary>
            Id of the site collection where the addin actually is installed. This can be different from the site collection where the addin was listed as being available
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.InstalledWebId">
            <summary>
            Id of the web where the addin actually is installed. This can be different from the web where the addin was listed as being available
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.InstalledWebFullUrl">
            <summary>
            Fully qualified URL of the web where the addin actually is installed. This can be different from the web where the addin was listed as being available
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.InstalledWebName">
            <summary>
            Name of the web where the addin actually is installed. This can be different from the web where the addin was listed as being available
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.CurrentSiteId">
            <summary>
            Id of the site collection where the addin actually is listed for
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.CurrentWebId">
            <summary>
            Id of the web where the addin actually is listed for
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.CurrentWebFullUrl">
            <summary>
            Fully qualified URL of the web where the addin actually is listed for
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.CurrentWebName">
            <summary>
            Name of the web where the addin actually is listed for
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.LaunchUrl">
            <summary>
            Where to redirect after clicking on the add-in (e.g. ~appWebUrl/Pages/Default.aspx?{StandardTokens})
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.LicensePurchaseTime">
            <summary>
            When was the app license purchased
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.PurchaserIdentity">
            <summary>
            Identity of the user that purchased the app
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.Locale">
            <summary>
            Locale used by the web where the add-in is installed
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.ProductId">
            <summary>
            The global unique id of the add-in. It is same for all tenants
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.Status">
            <summary>
            Status of the addin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.TenantAppData">
            <summary>
            After the add-in installed in the tenant app catalog site. It could enable tenant level usage. This data indicates the tenant the conditions how to filter the webs. 
            See https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/tenancies-and-deployment-scopes-for-sharepoint-add-ins for more details
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.TenantAppDataUpdateTime">
            <summary>
            When was the <see cref="P:PnP.Core.Admin.Model.SharePoint.ISharePointAddIn.TenantAppData"/> last updated?
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin">
            <summary>
            SharePoint Admin features
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdminCenterUriAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant admin center url (e.g. https://contoso-admin.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant admin center url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdminCenterUri(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant admin center url (e.g. https://contoso-admin.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant admin center url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantPortalUriAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant portal url (e.g. https://contoso.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant portal url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantPortalUri(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant portal url (e.g. https://contoso.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant portal url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantMySiteHostUriAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant my site host url (e.g. https://contoso-my.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant my site host url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantMySiteHostUri(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the SharePoint tenant my site host url (e.g. https://contoso-my.sharepoint.com)
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>SharePoint tenant my site host url</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdminCenterContextAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a <see cref="T:PnP.Core.Services.PnPContext"/> for the tenant's SharePoint admin center site
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns><see cref="T:PnP.Core.Services.PnPContext"/> for the tenant's SharePoint admin center</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdminCenterContext(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a <see cref="T:PnP.Core.Services.PnPContext"/> for the tenant's SharePoint admin center site
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns><see cref="T:PnP.Core.Services.PnPContext"/> for the tenant's SharePoint admin center</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdminsAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a list of <see cref="T:PnP.Core.Model.Security.ISharePointUser"/>s who are SharePoint Online Tenant admin
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>List of SharePoint Online Tenant admins</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantAdmins(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a list of <see cref="T:PnP.Core.Model.Security.ISharePointUser"/>s who are SharePoint Online Tenant admin
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>List of SharePoint Online Tenant admins</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.IsCurrentUserTenantAdminAsync">
            <summary>
            Checks if the current user is SharePoint Online tenant admin
            </summary>
            <returns>True if the user is a SharePoint Online tenant admin, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.IsCurrentUserTenantAdmin">
            <summary>
            Checks if the current user is SharePoint Online tenant admin
            </summary>
            <returns>True if the user is a SharePoint Online tenant admin, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantPropertiesAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the properties of this tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Properties of the tenant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantProperties(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the properties of this tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Properties of the tenant</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationXmlAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the search configuration of the tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationXml(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the search configuration of the tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Search configuration XML</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationManagedPropertiesAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the managed properties from the search configuration of the tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationManagedProperties(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the managed properties from the search configuration of the tenant
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>List of managed properties</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.SetTenantSearchConfigurationXmlAsync(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Sets the search configuration for the tenant
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationXml(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> to apply</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.SetTenantSearchConfigurationXml(System.String,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Sets the search configuration for the tenant
            </summary>
            <param name="configuration">Search configuration, obtained via <see cref="M:PnP.Core.Admin.Model.SharePoint.ISharePointAdmin.GetTenantSearchConfigurationXml(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> to apply</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollection">
            <summary>
            A SharePoint site collection reference
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollection.Id">
            <summary>
            The id of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollection.GraphId">
            <summary>
            Graph id of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollection.Url">
            <summary>
            The URL of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollection.RootWebId">
            <summary>
            Id of the root web of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollection.Name">
            <summary>
            Name of the site collection
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin">
            <summary>
            Defines a site collection administrator
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.Id">
            <summary>
            Gets the id of the site collection administrator when the administrator is added due to being an Microsoft 365 Group owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.LoginName">
            <summary>
            Gets the login name of the site collection administrator when the administrator is added as a SharePoint administrator
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.Name">
            <summary>
            Name of the admin.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.UserPrincipalName">
            <summary>
            User principle name (UPN) of the site collection administrator
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.Mail">
            <summary>
            E-mail address of the site collection administrator
            SP REST property name: Email
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.IsSecondaryAdmin">
            <summary>
            Is this a secondary site collection administator
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAdmin.IsMicrosoft365GroupOwner">
            <summary>
            Site collection admin is also a Microsoft 365 group owner
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionApp">
            <summary>
            Represents an interace for an app located at the site collection app catalog.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionAppManager">
            <summary>
            Represents an interface to work with Application Lifecycle Management (ALM) for a site collection app catalog.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager">
            <summary>
            SharePoint Site Collection features
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionsAsync(System.Boolean,PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the list of site collections. When using application permissions or a delegated permissions 
            for a SharePoint admin account all site collections are returned, otherwise only the site collections
            accessible by the requesting user are returned. Under the covers this method uses different approaches:
            - Application permissions: using the Sites endpoint via Graph
            - Delegated permissions, user is SharePoint Tenant Admin: querying the sites list maintained in the SharePoint Tenant Admin site
            - Delegated permissions, non admin: using the Search endpoint via Graph
            </summary>
            <param name="ignoreUserIsSharePointAdmin">When set to true and when the user is SharePoint admin then only return the site collections accessible by the user</param>
            <param name="filter">Optional filter to scope the returned site collections</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of site collections</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollections(System.Boolean,PnP.Core.Admin.Model.SharePoint.SiteCollectionFilter,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the list of site collections. When using application permissions or a delegated permissions 
            for a SharePoint admin account all site collections are returned, otherwise only the site collections
            accessible by the requesting user are returned. Under the covers this method uses different approaches:
            - Application permissions: using the Sites endpoint via Graph
            - Delegated permissions, user is SharePoint Tenant Admin: querying the sites list maintained in the SharePoint Tenant Admin site
            - Delegated permissions, non admin: using the Search endpoint via Graph
            </summary>
            <param name="ignoreUserIsSharePointAdmin">When set to true and when the user is SharePoint admin then only return the site collections accessible by the user</param>
            <param name="filter">Optional filter to scope the returned site collections</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of site collections</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionsWithDetailsAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,System.Boolean)">
            <summary>
            Returns a list of the site collections in the current tenant including details about the site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <param name="includeSharedAndPrivateTeamChannelSites">Optionally include the site collections behind shared and private Microsoft Teams channels</param>
            <returns>A list of site collections with details</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionsWithDetails(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions,System.Boolean)">
            <summary>
            Returns a list of the site collections in the current tenant including details about the site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <param name="includeSharedAndPrivateTeamChannelSites">Optionally include the site collections behind shared and private Microsoft Teams channels</param>
            <returns>A list of site collections with details</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionWithDetailsAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns details about the requested site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="url">Uri of the site collection to get details for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Site collection details, null if the passed site was not found</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionWithDetails(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns details about the requested site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="url">Uri of the site collection to get details for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>Site collection details, null if the passed site was not found</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetRecycledSiteCollectionsAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a list of the recycled site collections in the current tenant including details about the site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of site collections with details</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetRecycledSiteCollections(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns a list of the recycled site collections in the current tenant including details about the site. This method
            queries a hidden list in the SharePoint Tenant Admin site and therefore requires the user or application to 
            have the proper permissions
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of site collections with details</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionWebsWithDetailsAsync(System.Uri,System.Boolean)">
            <summary>
            Returns a list of all sub sites for the passed in site collection
            If the current context or passed url are for a sub web then the all sub webs of that sub web are returned
            </summary>
            <returns>List of webs with details</returns>
            <param name="url">Optional URL of the site collection to get the sub sites for. If null the sub sites are retreived for the current site collection</param>
            <param name="skipAppWebs">Skips the SharePoint app webs (APP#0)</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionWebsWithDetails(System.Uri,System.Boolean)">
            <summary>
            Returns a list of all sub sites for the passed in site collection
            If the current context or passed url are for a sub web then the all sub webs of that sub web are returned
            </summary>
            <returns>List of webs with details</returns>
            <param name="url">Optional URL of the site collection to get the sub sites for. If null the sub sites are retreived for the current site collection</param>
            <param name="skipAppWebs">Skips the SharePoint app webs (APP#0)</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.CreateSiteCollectionAsync(PnP.Core.Admin.Model.SharePoint.CommonSiteOptions,PnP.Core.Admin.Model.SharePoint.SiteCreationOptions,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Creates a site collection and returns a <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created site collection
            </summary>
            <param name="siteToCreate">Information about the site collection to create. 
            Pass in a <see cref="T:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions"/>, <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions"/>, <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteWithoutGroupOptions"/> or <see cref="T:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions"/> instance.</param>
            <param name="creationOptions">Options that control the site creation process</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created site collection</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.CreateSiteCollection(PnP.Core.Admin.Model.SharePoint.CommonSiteOptions,PnP.Core.Admin.Model.SharePoint.SiteCreationOptions,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Creates a site collection and returns a <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created site collection
            </summary>
            <param name="siteToCreate">Information about the site collection to create. 
            Pass in a <see cref="T:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions"/>, <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions"/>, <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteWithoutGroupOptions"/> or <see cref="T:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions"/> instance.</param>
            <param name="creationOptions">Options that control the site creation process</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created site collection</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.SiteExistsAsync(System.Uri)">
            <summary>
            Check if site exists
            </summary>
            <param name="url">Site url</param>
            <returns>True if the site exists, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.SiteExists(System.Uri)">
            <summary>
            Check if site exists
            </summary>
            <param name="url">Site url</param>
            <returns>True if the site exists, false otherwise</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.RecycleSiteCollectionAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Recycle a site collection. The site collection ends up in the recycle bin and can be restored. When the site collection
            has a connected group then also that group is automatically recycled
            </summary>
            <param name="siteToDelete">Site collection to recycle</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.RecycleSiteCollection(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Recycle a site collection. The site collection ends up in the recycle bin and can be restored. When the site collection
            has a connected group then also that group is automatically recycled
            </summary>
            <param name="siteToDelete">Site collection to recycle</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.RestoreSiteCollectionAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Restores a site collection from the recycle bin. When the site collection
            has a connected group then also that group is automatically restored
            </summary>
            <param name="siteToRestore">Site collection to restore</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.RestoreSiteCollection(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Restores a site collection from the recycle bin. When the site collection
            has a connected group then also that group is automatically restored
            </summary>
            <param name="siteToRestore">Site collection to restore</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.DeleteSiteCollectionAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Deletes a site collection. The deleted site collection is also removed from the recycle bin!
            </summary>
            <param name="siteToDelete">Site collection to delete</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.DeleteSiteCollection(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Deletes a site collection. The deleted site collection is also removed from the recycle bin!
            </summary>
            <param name="siteToDelete">Site collection to delete</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.DeleteRecycledSiteCollectionAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Deletes a site collection from the recycle bin.
            </summary>
            <param name="siteToDelete">Site collection to delete from the recycle bin</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.DeleteRecycledSiteCollection(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Deletes a site collection from the recycle bin.
            </summary>
            <param name="siteToDelete">Site collection to delete from the recycle bin</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionPropertiesAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the properties of a site collection
            </summary>
            <param name="site">Site collection to get the properties for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>The site collection properties</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionProperties(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Returns the properties of a site collection
            </summary>
            <param name="site">Site collection to get the properties for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>The site collection properties</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.ConnectSiteCollectionToGroupAsync(PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions,PnP.Core.Admin.Model.SharePoint.CreationOptions)">
            <summary>
            Connects an existing site collection to a new Microsoft 365 group
            </summary>
            <param name="siteGroupConnectOptions">Information needed to handle the connection of the site collection to a new Microsoft 365 group. </param>
            <param name="creationOptions">Options to control the connect to site process</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.ConnectSiteCollectionToGroup(PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions,PnP.Core.Admin.Model.SharePoint.CreationOptions)">
            <summary>
            Connects an existing site collection to a new Microsoft 365 group
            </summary>
            <param name="siteGroupConnectOptions">Information needed to handle the connection of the site collection to a new Microsoft 365 group. </param>
            <param name="creationOptions">Options to control the connect to site process</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionAdminsAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the administrators of the site collection
            </summary>
            <param name="site">Url of the site collection to get the administrators for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>The list of site collection administrators</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionAdmins(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets the administrators of the site collection
            </summary>
            <param name="site">Url of the site collection to get the administrators for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>The list of site collection administrators</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.SetSiteCollectionAdminsAsync(System.Uri,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Guid},PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Sets the administrators of the site collection by providing the list of login names. The first in the list will be the primary admin, the others will be
            secondary admins. When the site collection is group connected you can also opt to set group owners as they are also SharePoint site collection administrators.
            To stay in sync with with SharePoint Tenant admin center does, when adding a group owner the user is also added as group member.
            </summary>
            <param name="site">Url of the site collection to set the administrators for</param>
            <param name="sharePointAdminLoginNames">List of SharePoint Admins login names (e.g. i:0#.f|membership|anna@contoso.onmicrosoft.com) to set as admin</param>
            <param name="ownerGroupAzureAdUserIds">List of Azure AD user ids to set as admin via adding them to the connected Microsoft 365 group owners</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.SetSiteCollectionAdmins(System.Uri,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Guid},PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Sets the administrators of the site collection by providing the list of login names. The first in the list will be the primary admin, the others will be
            secondary admins. When the site collection is group connected you can also opt to set group owners as they are also SharePoint site collection administrators.
            To stay in sync with with SharePoint Tenant admin center does, when adding a group owner the user is also added as group member.
            </summary>
            <param name="site">Url of the site collection to set the administrators for</param>
            <param name="sharePointAdminLoginNames">List of SharePoint Admins login names (e.g. i:0#.f|membership|anna@contoso.onmicrosoft.com) to set as admin</param>
            <param name="ownerGroupAzureAdUserIds">List of Azure AD user ids to set as admin via adding them to the connected Microsoft 365 group owners</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.HideAddTeamsPromptAsync(System.Uri)">
            <summary>
            Hides the Add Microsoft Teams banner. Only works when the site collection was already connected to an Microsoft 365 group
            </summary>
            <param name="site">Url of the site collection to hide the Add Teams prompt for</param>
            <returns>True if hidden</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.HideAddTeamsPrompt(System.Uri)">
            <summary>
            Hides the Add Microsoft Teams banner. Only works when the site collection was already connected to an Microsoft 365 group
            </summary>
            <param name="site">Url of the site collection to hide the Add Teams prompt for</param>
            <returns>True if hidden</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.IsAddTeamsPromptHiddenAsync(System.Uri)">
            <summary>
            Checks if the Add Microsoft Teams banner is hidden. Only works when the site collection was already connected to an Microsoft 365 group
            </summary>
            <param name="site">Url of the site collection to check the Add Teams prompt status for</param>
            <returns>True if hidden, false otherwise.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.IsAddTeamsPromptHidden(System.Uri)">
            <summary>
            Checks if the Add Microsoft Teams banner is hidden. Only works when the site collection was already connected to an Microsoft 365 group.
            </summary>
            <param name="site">Url of the site collection to check the Add Teams prompt status for</param>
            <returns>True if hidden, false otherwise.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.EnableCommunicationSiteFeaturesAsync(System.Uri)">
            <summary>
            Enables the communication site features on this team site using the Topic design. 
            Requirements:
            - Only works when the site collection was not connected to an Microsoft 365 group
            - Web is root web of the site collection, cannot be applied to sub sites
            - Web template is "STS#0" or "EHS#1" (so TeamSite)
            </summary>
            <param name="site">Url of the team site collection to enable communication site features for</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.EnableCommunicationSiteFeatures(System.Uri)">
            <summary>
            Enables the communication site features on this team site using the Topic design. 
            Requirements:
            - Only works when the site collection was not connected to an Microsoft 365 group
            - Web is root web of the site collection, cannot be applied to sub sites
            - Web template is "STS#0" or "EHS#1" (so TeamSite)
            </summary>
            <param name="site">Url of the team site collection to enable communication site features for</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.EnableCommunicationSiteFeaturesAsync(System.Uri,System.Guid)">
            <summary>
            Enables the communication site features on this team site using the Topic design. 
            Requirements:
            - Use 96c933ac-3698-44c7-9f4a-5fd17d71af9e (Topic), 6142d2a0-63a5-4ba0-aede-d9fefca2c767 (Showcase) or f6cc5403-0d63-442e-96c0-285923709ffc (Blank) as design package id
            - Only works when the site collection was not connected to an Microsoft 365 group
            - Web is root web of the site collection, cannot be applied to sub sites
            - Web template is "STS#0" or "EHS#1" (so TeamSite)
            </summary>
            <param name="site">Url of the team site collection to enable communication site features for</param>
            <param name="designPackageId">Design package id to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.EnableCommunicationSiteFeatures(System.Uri,System.Guid)">
            <summary>
            Enables the communication site features on this team site using the Topic design. 
            Requirements:
            - Use 96c933ac-3698-44c7-9f4a-5fd17d71af9e (Topic), 6142d2a0-63a5-4ba0-aede-d9fefca2c767 (Showcase) or f6cc5403-0d63-442e-96c0-285923709ffc (Blank) as design package id
            - Only works when the site collection was not connected to an Microsoft 365 group
            - Web is root web of the site collection, cannot be applied to sub sites
            - Web template is "STS#0" or "EHS#1" (so TeamSite)
            </summary>
            <param name="site">Url of the team site collection to enable communication site features for</param>
            <param name="designPackageId">Design package id to apply</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionACSPrincipalsAsync(System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped to the current site and optionally it's subsites. 
            A Azure ACS principal granted tenant level permissions will not be included here. If you need that
            then use the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipalsAsync(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> method.
            </summary>
            <param name="includeSubsites">Also load the Azure ACS principals for the subsites. This is relevant when a principal was granted web or list permissions but no site permissions</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of Azure ACS principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionACSPrincipals(System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped to the current site and optionally it's subsites. 
            A Azure ACS principal granted tenant level permissions will not be included here. If you need that
            then use the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipals(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> method.
            </summary>
            <param name="includeSubsites">Also load the Azure ACS principals for the subsites. This is relevant when a principal was granted web or list permissions but no site permissions</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of Azure ACS principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipalsAsync(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped to the current site and/or scoped tenant wide. For performance reason this method 
            requires the input of a <see cref="T:System.Collections.Generic.List`1"/> which can be retrieved using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipalsAsync"/> method.
            </summary>
            <param name="legacyServicePrincipals">List of legacy service principals to include</param>
            <param name="includeSubsites">Also load the Azure ACS principals for the subsites. This is relevant when a principal was granted web or list permissions but no site permissions</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of Azure ACS principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipals(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped to the current site and/or scoped tenant wide. For performance reason this method 
            requires the input of a <see cref="T:System.Collections.Generic.List`1"/> which can be retrieved using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipals"/> method.
            </summary>
            <param name="legacyServicePrincipals">List of legacy service principals to include</param>
            <param name="includeSubsites">Also load the Azure ACS principals for the subsites. This is relevant when a principal was granted web or list permissions but no site permissions</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantACSPrincipalsAsync(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped tenant wide. For performance reason this method 
            requires the input of a <see cref="T:System.Collections.Generic.List`1"/> which can be retrieved using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipalsAsync"/> method.
            </summary>
            <param name="legacyServicePrincipals">List of legacy service principals to include</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of Azure ACS principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantACSPrincipals(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of Azure ACS principals that are scoped tenant wide. For performance reason this method 
            requires the input of a <see cref="T:System.Collections.Generic.List`1"/> which can be retrieved using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipalsAsync"/> method.
            </summary>
            <param name="legacyServicePrincipals">List of legacy service principals to include</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of Azure ACS principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipalsAsync">
            <summary>
            Gets a list of legacy service principals which are required when using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipalsAsync(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> method.
            </summary>
            <returns>List of legacy service principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetLegacyServicePrincipals">
            <summary>
            Gets a list of legacy service principals which are required when using the <see cref="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetTenantAndSiteCollectionACSPrincipals(System.Collections.Generic.List{PnP.Core.Admin.Model.SharePoint.ILegacyServicePrincipal},System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)"/> method.
            </summary>
            <returns>List of legacy service principals</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionSharePointAddInsAsync(System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of SharePoint AddIns that are scoped to the current site and optionally it's subsites. 
            </summary>
            <param name="includeSubsites">Also load the SharePoint AddIns for the subsites</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of SharePoint AddIns</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionManager.GetSiteCollectionSharePointAddIns(System.Boolean,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Gets a list of SharePoint AddIns that are scoped to the current site and optionally it's subsites. 
            </summary>
            <param name="includeSubsites">Also load the SharePoint AddIns for the subsites</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns>A list of SharePoint AddIns</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties">
            <summary>
            Properties of a site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AllowDownloadingNonWebViewableFiles">
            <summary>
            Indicates whether end users can download non-viewable files (e.g. zip)
            from browser. By default, this would be set to true if setting ConditionalAccessPolicy to AllowLimitedAccess.
            This can be set to false to block automatic download of files that can't be vieweed in the browser
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AllowEditing">
            <summary>
            Indicates whether WAC files should be open in Edit mode.
            By default, this would be set to true if setting ConditionalAccessPolicy to AllowLimitedAccess.
            This can be set to false to enable view only mode in WAC.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AllowSelfServiceUpgrade">
            <summary>
            Flag that indicates is a site supports self-service upgrade
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AnonymousLinkExpirationInDays">
            <summary>
            Anonymous link expiration in days
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AuthContextStrength">
            <summary>
            Gets or sets the authentication context strength for this site for all the webs
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.AuthenticationContextName">
            <summary>
            Gets or sets the authentication context for this site for all the webs
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.BlockDownloadLinksFileType">
            <summary>
            Specifies the types of files that can be displayed when the block download links feature is being used
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.BlockDownloadPolicy">
            <summary>
            Gets or sets the Block download policy flag
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ClearRestrictedAccessControl">
            <summary>
            Clears the Restricted access control groups
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.CommentsOnSitePagesDisabled">
            <summary>
            Whether comments on site pages are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.CompatibilityLevel">
            <summary>
            The compatibility leve of this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ConditionalAccessPolicy">
            <summary>
            Flag that controls access from devices that aren't compliant or joined to a domain to have
            limited access (web-only, without the Download, Print, and Sync commands)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultLinkPermission">
            <summary>
            The default link permission for this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultLinkToExistingAccess">
            <summary>
            The default link to existing access for this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultLinkToExistingAccessReset">
            <summary>
            This is to reset default link to existing access for this site. After resetting, the value will be default (false) or respect the higher level value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultShareLinkRole">
            <summary>
            Default share link role
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultShareLinkScope">
            <summary>
            Default share link scope
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DefaultSharingLinkType">
            <summary>
            The default link type for this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DenyAddAndCustomizePages">
            <summary>
            Determines whether the site has AddAndCustomizePages denied
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Description">
            <summary>
            Site's description
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DisableAppViews">
            <summary>
            Indicates whether app views are disabled in all the webs of this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DisableCompanyWideSharingLinks">
            <summary>
            Indicates whether company wide sharing links are disabled in all the webs of this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.DisableFlows">
            <summary>
            Indicates whether flows are disabled in all the webs of this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ExcludeBlockDownloadPolicySiteOwners">
            <summary>
            Gets or sets the exclude site owners flag for Block download policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ExcludedBlockDownloadGroupIds">
            <summary>
            Gets or sets the Microsoft365 group GUIDs that are excluded from Block download policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ExternalUserExpirationInDays">
            <summary>
            External user expiration in days
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.GroupId">
            <summary>
            The GroupId of the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.GroupOwnerLoginName">
            <summary>
            The login name of the group owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.HasHolds">
            <summary>
            Flag that indicates a site has Holds
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.HubSiteId">
            <summary>
            The HubSiteId of the HubSite this site is associated with
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IBMode">
            <summary>
            get or Set IBMode (Information Barrier Mode)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IBSegments">
            <summary>
            Gets or sets the IB (Information Barrier Mode) segment GUIDs
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IBSegmentsToAdd">
            <summary>
            Gets or sets the IB (Information Barrier Mode) segments to add
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IBSegmentsToRemove">
            <summary>
            Gets or sets the IB (Information Barrier Mode) segments to remove
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IsGroupOwnerSiteAdmin">
            <summary>
            Whether group owner is site admin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IsHubSite">
            <summary>
            Whether or not this site is a HubSite
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IsTeamsChannelConnected">
            <summary>
            Gets if the site is connected to a team channel in Microsoft Teams.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.IsTeamsConnected">
            <summary>
            Gets if the site is connected to a team in Microsoft Teams
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.LastContentModifiedDate">
            <summary>
            The last time content was modified on the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Lcid">
            <summary>
            The Locale ID of the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.LimitedAccessFileType">
            <summary>
            Specifies what files can be viewed when ConditionalAccessPolicy is set to AllowLimitedAccess
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.LockIssue">
            <summary>
            A description of the lock issue
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.LockState">
            <summary>
            A string representing the lock state of the site. Valid values are 
            - Unlock: the site is not locked, default state
            - NoAccess: the site is locked for all access
            - ReadOnly: the site is set to read only status
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.MediaTranscription">
            <summary>
            Gets or sets the media transcription policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OverrideBlockUserInfoVisibility">
            <summary>
            Indicates what the state of the browse user info policy in the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OverrideTenantAnonymousLinkExpirationPolicy">
            <summary>
            This site overrides the tenant anonymous link expiration policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OverrideTenantExternalUserExpirationPolicy">
            <summary>
            This site overrides the tenant external user expiration policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Owner">
            <summary>
            The decoded login name of the site owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OwnerEmail">
            <summary>
            The email address of the site owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OwnerLoginName">
            <summary>
            The encoded login name of the site owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.OwnerName">
            <summary>
            The site owner name
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.PWAEnabled">
            <summary>
            Determines whether PWA is enabled for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ReadOnlyForUnmanagedDevices">
            <summary>
            Gets or sets the Read only access for unmanaged devices policy flag
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RelatedGroupId">
            <summary>
            The GroupId of the group this site is associated with
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RequestFilesLinkEnabled">
            <summary>
            Gets or sets request files link enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RequestFilesLinkExpirationInDays">
            <summary>
            Gets or sets request files link expiration days
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RestrictedAccessControl">
            <summary>
            Gets or sets the Restricted access control policy flag based on group membership
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RestrictedAccessControlGroups">
            <summary>
            Gets or sets the Restricted Access Control Groups
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RestrictedAccessControlGroupsToAdd">
            <summary>
            Gets or sets the restricted access control groups to be added
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RestrictedAccessControlGroupsToRemove">
            <summary>
            Gets or sets the restricted access control groups to be removed
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.RestrictedToRegion">
            <summary>
            Determines whether the site is resticted to a specific geo location
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SensitivityLabel">
            <summary>
            The Guid of an Information Protection label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SensitivityLabel2">
            <summary>
            The Guid of an Information Protection label
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SetOwnerWithoutUpdatingSecondaryAdmin">
            <summary>
            Whether update secondary admin during setting primary admin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingAllowedDomainList">
            <summary>
            A list of allowed domain names for this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingBlockedDomainList">
            <summary>
            A list of blocked domain names for this site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingCapability">
            <summary>
            Specifies what type of external user and guest link sharing is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingDomainRestrictionMode">
            <summary>
            Indicates what this site's domain restriction mode is
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingLockDownCanBeCleared">
            <summary>
            Get whether the sharing lock can be cleared
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SharingLockDownEnabled">
            <summary>
            Gets the SharingLockDownEnabled setting
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.ShowPeoplePickerSuggestionsForGuestUsers">
            <summary>
            Flag that controls allowing members to search guest users in the directory
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SiteDefinedSharingCapability">
            <summary>
            Specifies what type of external user and guest link sharing is enabled for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.SocialBarOnSitePagesDisabled">
            <summary>
            Whether social bar on site pages is enabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Status">
            <summary>
            The status of the site, possible values are:
            - Active: default status for a site
            - Recycled: the site is the tenant's site collection recyclebin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.StorageMaximumLevel">
            <summary>
            The Storage Quota
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.StorageQuotaType">
            <summary>
            The storage quota type for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.StorageUsage">
            <summary>
            The current usage of storage for the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.StorageWarningLevel">
            <summary>
            The warning level for storage usage
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.TeamsChannelType">
            <summary>
            When the site is connected to a team channel in Microsoft Teams, gets the type of channel the site is connected to
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Template">
            <summary>
            The site's web template name
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.TimeZoneId">
            <summary>
            The TimeZone
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Title">
            <summary>
            The site's title
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Url">
            <summary>
            The Url of the site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.WebsCount">
            <summary>
            The number of webs in the site
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.UpdateAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Updates the properties of this site collection
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ISiteCollectionProperties.Update(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Updates the properties of this site collection
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails">
            <summary>
            A SharePoint site collection with details reference
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.TimeCreated">
            <summary>
            Date time when this site collection was created
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.CreatedBy">
            <summary>
            The user that created this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.ShareByEmailEnabled">
            <summary>
            Indicates whether this site collection can be externally shared via an email
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.ShareByLinkEnabled">
            <summary>
            Indicates whether this site collection can be externally shared via a link
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.SiteOwnerName">
            <summary>
            Returns the name of the site collection owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.SiteOwnerEmail">
            <summary>
            Returns the email address of teh site collection owner
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.StorageQuota">
            <summary>
            The storage quota in bytes for this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.StorageUsed">
            <summary>
            The storage quota used for this site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.TemplateId">
            <summary>
            The id of the applied template (if any)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ISiteCollectionWithDetails.TemplateName">
            <summary>
            The name of the applied template
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ITenantApp">
            <summary>
            Represents an interace for an app located at the tenant app catalog.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ITenantAppManager">
            <summary>
            Represents an interface to work with Application Lifecycle Management (ALM) for the tenant app catalog.
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetTenantAppCatalogUriAsync">
            <summary>
            Returns the URI of the current tenant app catalog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetTenantAppCatalogUri">
            <summary>
            Returns the URI of the current tenant app catalog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.EnsureTenantAppCatalogAsync">
            <summary>
            Ensures there's a tenant app catalog, if not present it will be created.
            </summary>
            <returns>True if the app catalog was created, false if the app catalog already existed.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.EnsureTenantAppCatalog">
            <summary>
            Ensures there's a tenant app catalog, if not present it will be created.
            </summary>
            <returns>True if the app catalog was created, false if the app catalog already existed.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.SolutionContainsTeamsComponent(System.Guid)">
            <summary>
            Indicates whether a solution contains MS Teams component. 
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if the solution contains teams component.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.SolutionContainsTeamsComponentAsync(System.Guid)">
            <summary>
            Indicates whether a solution contains MS Teams component. 
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if the solution contains teams component.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetSiteCollectionAppCatalogs">
            <summary>
            Returns a list of site collection app catalogs in the tenant.
            </summary>
            <returns>A list of <see cref="T:PnP.Core.Admin.Model.SharePoint.IAppCatalogSite"/></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetSiteCollectionAppCatalogsAsync">
            <summary>
            Returns a list of site collection app catalogs in the tenant.
            </summary>
            <returns>A list of <see cref="T:PnP.Core.Admin.Model.SharePoint.IAppCatalogSite"/></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.AddSiteCollectionAppCatalogAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Add a site collection app catalogs to the site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to add the app catalog to</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.AddSiteCollectionAppCatalog(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Add a site collection app catalogs to the site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to add the app catalog to</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.RemoveSiteCollectionAppCatalogAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Removes a site collection app catalog from a site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to remove the app catalog for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.RemoveSiteCollectionAppCatalog(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Removes a site collection app catalog from a site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to remove the app catalog for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.EnsureSiteCollectionAppCatalogAsync(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Ensures a site collection app catalogs exists for provided site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to ensure the app catalog exists for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.EnsureSiteCollectionAppCatalog(System.Uri,PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Ensures a site collection app catalogs exists for provided site collection.
            </summary>
            <param name="siteCollectionAbsoluteUri">Fully qualified url of the site collection to ensure the app catalog exists for</param>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetStoreApps">
            <summary>
            A list of apps, added to the tenant from the SharePoint Store.
            </summary>
            <returns>A list of <see cref="T:PnP.Core.Admin.Model.SharePoint.ITenantApp"/></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.GetStoreAppsAsync">
            <summary>
            A list of apps, added to the tenant from the SharePoint Store.
            </summary>
            <returns>A list of <see cref="T:PnP.Core.Admin.Model.SharePoint.ITenantApp"/></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.AddAndDeployStoreApp(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Uploads SharePoint Store app to the tenant app catalog and deploys it.
            </summary>
            <param name="storeAssetId">A unique store asset id. If you open the SharePoint Store app's home page, the url will be ...appStore.aspx/appDetail/WA200001111. The last part <em>WA200001111</em> will be your store asset id.</param>
            <param name="cultureName">4-letters culture name, i.e. "en-us", "de-de", etc.</param>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment and will install the app globally.</param>
            <param name="overwrite">Whether to overwrite if the app is already exisits in the tenant app catalog.</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.AddAndDeployStoreAppAsync(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Uploads SharePoint Store app to the tenant app catalog and deploys it.
            </summary>
            <param name="storeAssetId">A unique store asset id. If you open the SharePoint Store app's home page, the url will be ...appStore.aspx/appDetail/WA200001111. The last part <em>WA200001111</em> will be your store asset id.</param>
            <param name="cultureName">4-letters culture name, i.e. "en-us", "de-de", etc.</param>
            <param name="skipFeatureDeployment">If set to true will skip the feature deployment and will install the app globally.</param>
            <param name="overwrite">Whether to overwrite if the app is already exisits in the tenant app catalog.</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.IsAppUpgradeAvailable(System.Int32)">
            <summary>
            Indicates whether the upgrade is available for the specific app on a site.
            </summary>
            <param name="id">List item id of the app in the AppCatalog list.</param>
            <returns><em>true</em> if update is available.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.IsAppUpgradeAvailableAsync(System.Int32)">
            <summary>
            Indicates whether the upgrade is available for the specific app on a site.
            </summary>
            <param name="id">List item id of the app in the AppCatalog list.</param>
            <returns><em>true</em> if update is available.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.IsAppUpgradeAvailable(System.Guid)">
            <summary>
            Indicates whether the upgrade is available for the specific app on a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if update is available.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.IsAppUpgradeAvailableAsync(System.Guid)">
            <summary>
            Indicates whether the upgrade is available for the specific app on a site.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><em>true</em> if update is available.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.DownloadTeamsSolution(System.Int32)">
            <summary>
            Downloads MS Teams package from SPFx solution as a stream. You can save the stream to a file with a .zip extension later on.
            </summary>
            <param name="id">List item id of the app in the AppCatalog list.</param>
            <returns><see cref="T:System.IO.Stream"/> with the MS Teams binary package.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.DownloadTeamsSolutionAsync(System.Int32)">
            <summary>
            Downloads MS Teams package from SPFx solution as a stream. You can save the stream to a file with a .zip extension later on.
            </summary>
            <param name="id">List item id of the app in the AppCatalog list.</param>
            <returns><see cref="T:System.IO.Stream"/> with the MS Teams binary package.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.DownloadTeamsSolution(System.Guid)">
            <summary>
            Downloads MS Teams package from SPFx solution as a stream. You can save the stream to a file with a .zip extension later on.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><see cref="T:System.IO.Stream"/> with the MS Teams binary package.</returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantAppManager.DownloadTeamsSolutionAsync(System.Guid)">
            <summary>
            Downloads MS Teams package from SPFx solution as a stream. You can save the stream to a file with a .zip extension later on.
            </summary>
            <param name="id">The unique id of the app. Notice that this is not the product id as listed in the app catalog.</param>
            <returns><see cref="T:System.IO.Stream"/> with the MS Teams binary package.</returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ITenantProperties">
            <summary>
            Tenant properties
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AIBuilderDefaultPowerAppsEnvironment">
            <summary>
            Gets or sets the default PowerApps environment in which the Microsoft Syntex form processing feature will create models
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AIBuilderEnabled">
            <summary>
            Gets or sets the value if the AIBuilder settings should be shown in the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AIBuilderEnabledInContentCenter">
            <summary>
            Gets or sets the value if the AIBuilder settings should be shown in content centers. True means that it is shown
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AIBuilderSiteListFileName">
            <summary>
            It is a name of the file which contains the list of AIBuilder enabled sites
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowAnonymousMeetingParticipantsToAccessWhiteboards">
            <summary>
            Gets or sets a value to indicate whether to allow anonymous meeting participants to access whiteboards
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowCommentsTextOnEmailEnabled">
            <summary>
            Gets or sets a value AllowCommentsTextOnEmail boolean
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowDownloadingNonWebViewableFiles">
            <summary>
            Gets or sets a value to specify the advanced setting of the conditional access policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowedDomainListForSyncClient">
            <summary>
            Get/Set sync client trusted domain guids
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowEditing">
            <summary>
            Gets or sets a value to specify the advanced setting of the conditional access policy.
            This controls if WAC files should be opened in Edit mode
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowEveryoneExceptExternalUsersClaimInPrivateSite">
            <summary>
            Gets or sets the value if EveryoneExceptExternalUsers claim is allowed or not in people picker in a private group site. False value means it is blocked.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowGuestUserShareToUsersNotInSiteCollection">
            <summary>
            Gets or sets a value to handle guest sharing to users not in guest users' site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowLimitedAccessOnUnmanagedDevices">
            <summary>
            Gets or sets a Boolean value that specifies whether the following access setting is enabled: set allow access on unmanaged devices
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowOverrideForBlockUserInfoVisibility">
            <summary>
            Gets or sets BlockUserInfoVisibility value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowSelectSecurityGroupsInSPSitesList">
            <summary>
            Gets or sets a value to handle guest sharing group's allow list
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AllowSelectSGsInODBListInTenant">
            <summary>
            Gets or sets a value to handle the tenant allowing select security groups access to ODB setting
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AnyoneLinkTrackUsers">
            <summary>
            Gets or sets a value to specify whether anyone links should track link users
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ApplyAppEnforcedRestrictionsToAdHocRecipients">
            <summary>
            Gets or sets whether app-enforced restrictions apply to TOAA users
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.AuthContextResilienceMode">
            <summary>
            Gets or sets a value of AuthContextResilienceMode
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BccExternalSharingInvitations">
            <summary>
            Gets or sets a value to specify if BCC functionality is enabled for external invitations
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BccExternalSharingInvitationsList">
            <summary>
            Gets or sets list of recipients to be BCC'ed on all external sharing invitations
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockAccessOnUnmanagedDevices">
            <summary>
            Gets or sets a Boolean value that specifies whether the following access setting is enabled: set allow access on unmanaged devices
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadLinksFileType">
            <summary>
            Gets or sets the tenant's block download links' file type.
            There is an equivalent site level policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadFileTypePolicy">
            <summary>
            Indicates whether Block Download by File Type Policy is enabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadOfAllFilesForGuests">
            <summary>
            Gets or sets a Boolean value that specifies whether the following policy is enabled: set block download of all files for guests
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadOfAllFilesOnUnmanagedDevices">
            <summary>
            Gets or sets a Boolean value that specifies whether the following policy is enabled: set block download of all files on unmanaged devices
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadOfViewableFilesForGuests">
            <summary>
            Gets or sets a Boolean value that specifies whether the following policy is enabled: set block download of browser viewable files for guests
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockDownloadOfViewableFilesOnUnmanagedDevices">
            <summary>
            Gets or sets a Boolean value that specifies whether the following policy is enabled: set block download of browser viewable files on unmanaged devices
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockMacSync">
            <summary>
            Get/Set whether Mac clients should be blocked from sync
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockSendLabelMismatchEmail">
            <summary>
            Gets or sets the BlockSendLabelMismatchEmail property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockUserInfoVisibilityInOneDrive">
            <summary>
            Gets or sets BlockUserInfoVisibilityInOneDrive value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.BlockUserInfoVisibilityInSharePoint">
            <summary>
            Gets or sets BlockUserInfoVisibilityInSharePoint value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CommentsOnFilesDisabled">
            <summary>
            Whether comments on files are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CommentsOnListItemsDisabled">
            <summary>
            Whether comments on list items are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CommentsOnSitePagesDisabled">
            <summary>
            Whether comments on site pages are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CompatibilityRange">
            <summary>
            Determines which compatibility range is available for new site collections
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ConditionalAccessPolicy">
            <summary>
            Gets or sets a value to specify the conditional access policy for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ConditionalAccessPolicyErrorHelpLink">
            <summary>
            Gets or sets the link to organization help page in case of access denied due to
            conditional access policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ContentTypeSyncSiteTemplatesList">
            <summary>
            A list of site templates that the tenant has opted-in to sync Content types
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreDefaultLinkToExistingAccess">
            <summary>
            Gets or sets default share link to existing access on core partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreDefaultShareLinkRole">
            <summary>
            Gets or sets default share link role on core partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreDefaultShareLinkScope">
            <summary>
            Gets or sets default share link scope on core partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreRequestFilesLinkExpirationInDays">
            <summary>
            Gets or sets request files link expiration days on core partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreRequestFilesLinkEnabled">
            <summary>
            Enable the request files functionality for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CoreSharingCapability">
            <summary>
            Gets or sets collaboration type on core partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.CustomizedExternalSharingServiceUrl">
            <summary>
            Gets or sets customized external sharing service url
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DefaultLinkPermission">
            <summary>
            Gets or sets default link permission
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DefaultODBMode">
            <summary>
            Gets or sets DefaultODBMode value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DefaultSharingLinkType">
            <summary>
            Gets or sets default sharing link type for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DenySelectSecurityGroupsInSPSitesList">
            <summary>
            Gets or sets a value to handle guest sharing group's allow list
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableAddToOneDrive">
            <summary>
            Gets or sets a value to specify whether Add To OneDrive is disabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableBackToClassic">
            <summary>
            Gets or sets a value to specify whether back to classic link is disabled in Modern UX
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableCustomAppAuthentication">
            <summary>
            Gets or sets the value of whether ACS app only tokens are blocked. True means it's blocked
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableListSync">
            <summary>
            Get/Set whether Nucleus Sync should be disabled for Lists
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableVivaConnectionsAnalytics">
            <summary>
            Indicates whether Viva Connections Analytics is disabled or not on the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisabledModernListTemplateIds">
            <summary>
            An array of modern List template ids that are disabled on the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisabledWebPartIds">
            <summary>
            Gets or sets the list to disable web parts. The Guid is the web part Guid defined in web part's manifest
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableOutlookPSTVersionTrimming">
            <summary>
            Gets or sets a value to specify whether Outlook PST version trimming is disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisablePersonalListCreation">
            <summary>
            Gets or sets a value to specify whether personal list creation is disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableReportProblemDialog">
            <summary>
            Disable sync client report problem dialog
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisableSpacesActivation">
            <summary>
            Gets or sets a value to specify whether activation of spaces are disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisallowInfectedFileDownload">
            <summary>
            Don't allow download of files marked as infected
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisplayNamesOfFileViewers">
            <summary>
            Get/Set DisplayNamesOfFileViewers Tenant settings for Analytics Privacy property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisplayNamesOfFileViewersInSpo">
            <summary>
            Get/Set DisplayNamesOfFileViewersInSpo Tenant settings for Analytics Privacy property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.DisplayStartASiteOption">
            <summary>
            Gets or sets a Boolean value that specifies whether tenant users see the "Start a fresh site" menu option
            </summary>
            <value>
            True indicates that this menu option is present for tenant users.
            False indicates the menu option is hidden for tenant users.
            </value>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EmailAttestationEnabled">
            <summary>
            Gets or sets a value to handle email attestation
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EmailAttestationReAuthDays">
            <summary>
            Gets or sets the time between reattestation
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EmailAttestationRequired">
            <summary>
            Gets or sets the EmailAttestationRequired setting for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableAIPIntegration">
            <summary>
            Gets or sets the AIPIntegrationKey cache property for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableAutoNewsDigest">
            <summary>
            Gets or sets a value to specify whether Auto news digest is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableAzureADB2BIntegration">
            <summary>
            Gets or sets a value to specify whether AAD B2B integration is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnabledFlightAllowAADB2BSkipCheckingOTP">
            <summary>
            Get status of flight AllowAADB2BSkipCheckingOTP
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableGuestSignInAcceleration">
            <summary>
            Gets or sets a whether we force the auto-acceleration sign-in
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableMinimumVersionRequirement">
            <summary>
            Gets or sets the MinimumVersioning cache property for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableMipSiteLabel">
            <summary>
            Gets the EnableMipSiteLabel property of the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnablePromotedFileHandlers">
            <summary>
            Gets or sets a value to specify if promoted file handlers are enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.EnableRestrictedAccessControl">
            <summary>
            Gets or sets the value of policy which determines whether Restricted Access Control Policy is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ExcludedFileExtensionsForSyncClient">
            <summary>
            Get/Set excluded file extensions for sync client
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ExternalServicesEnabled">
            <summary>
            Determines whether external services are enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ExternalUserExpirationRequired">
            <summary>
            Gets or sets whether external user expiration is enabled for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ExternalUserExpireInDays">
            <summary>
            Gets or sets the number of days before external user expiration if not individually extended
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.FileAnonymousLinkType">
            <summary>
            Gets or sets file anonymous link type for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.FilePickerExternalImageSearchEnabled">
            <summary>
            Gets or sets a value to specify if External Image Search is enabled on the File Picker
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.FolderAnonymousLinkType">
            <summary>
            Gets or sets folder anonymous link type for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.GuestSharingGroupAllowListInTenant">
            <summary>
            Gets or sets a value to handle guest sharing group's allow list 
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.GuestSharingGroupAllowListInTenantByPrincipalIdentity">
            <summary>
            Gets: a list of PrincipalNames
            Example output: List of PrincipalNames. e.g. ["c:0-.f|rolemanager|contoso-all-users/35533f7d-4536-4c82-9dbc-352f9424578b"]
            Sets: take a list of principalNames
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.HasAdminCompletedCUConfiguration">
            <summary>
            Gets or sets the value if the tenant admin has completed CU configuration
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.HasIntelligentContentServicesCapability">
            <summary>
            Gets or sets whether the tenant has Intelligent Content Services Capability or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.HasTopicExperiencesCapability">
            <summary>
            Gets or sets whether the tenant has Topic Experiences Capability or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.HideSyncButtonOnDocLib">
            <summary>
            Gets or sets a value to specify whether the sync button on team sites and other ODBs is hidden.
            (Basically this hides the sync button on all document libraries except the OneDrive for Business that the user owns.)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.HideSyncButtonOnODB">
            <summary>
            Get/Set whether to hide the sync button on OneDrive for Business sites
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ImageTaggingOption">
            <summary>
            Gets or sets the value of the image tagging option
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IncludeAtAGlanceInShareEmails">
            <summary>
            Gets or sets a value to specify whether to include at a glance in the sharing emails
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IBImplicitGroupBased">
            <summary>
            Gets or sets IBImplicitGroupBased value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.InformationBarriersSuspension">
            <summary>
            Gets or sets InformationBarriersSuspension value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IPAddressAllowList">
            <summary>
            Enforces incoming requests are coming from the address range in IPAddressAllowList
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IPAddressEnforcement">
            <summary>
            nforces incoming requests are coming from the address range in IPAddressAllowList
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IPAddressWACTokenLifetime">
            <summary>
            The WAC Loopback token lifetime. Default is 15 minutes
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsAppBarTemporarilyDisabled">
            <summary>
            Get or sets the IsAppBarTemporarilyDisabled flag
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsCollabMeetingNotesFluidEnabled">
            <summary>
            Gets or sets a value to specify whether CollabMeetingNotes Fluid Framework is enabled
            If IsFluidEnabled disabled, IsCollabMeetingNotesFluidEnabled will be disabled automatically
            If IsFluidEnabled enabled, IsCollabMeetingNotesFluidEnabled will be enabled automatically
            IsCollabMeetingNotesFluidEnabled can be enabled only when IsFluidEnabled is already enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsFluidEnabled">
            <summary>
            Gets or sets a value to specify whether Fluid Framework is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsLoopEnabled">
            <summary>
            Gets or sets a value to specify whether the Loop feature for the Fluid Framework is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsHubSitesMultiGeoFlightEnabled">
            <summary>
            Get status of HubSitesMultiGeo flight
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsMnAFlightEnabled">
            <summary>
            Get status of MnA flight
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsMultiGeo">
            <summary>
            The property indicates if tenant has multi-geo tenant instances
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsMultipleHomeSitesFlightEnabled">
            <summary>
            Status of flight IsMultipleHomeSitesFlightEnabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsUnmanagedSyncClientForTenantRestricted">
            <summary>
            Get/Set sync client restrictions
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsUnmanagedSyncClientRestrictionFlightEnabled">
            <summary>
            Get status of feature sync client restriction allowed
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsVivaHomeFlightEnabled">
            <summary>
            Status of flight IsVivaHomeFlightEnabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.IsWBFluidEnabled">
            <summary>
            Gets or sets a value to specify whether Whiteboard Fluid Framework is enabled
            If IsFluidEnabled disabled, IsWBFluidEnabled will be disabled automatically
            If IsFluidEnabled enabled, IsWBFluidEnabled will be enabled automatically
            IsWBFluidEnabled can be enabled only when IsFluidEnabled is already enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.LabelMismatchEmailHelpLink">
            <summary>
            Gets or sets the LabelMismatchEmailHelpLink property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.LegacyAuthProtocolsEnabled">
            <summary>
            Gets or sets the value if ADAL is disabled in the tenant. True value means it is disabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.LimitedAccessFileType">
            <summary>
            Specifies what files can be viewed when ConditionalAccessPolicy is set to AllowLimitedAccess
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.MachineLearningCaptureEnabled">
            <summary>
            Gets or sets the value if the ML capture settings should be shown in the tenant. True means that it is shown
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.MarkNewFilesSensitiveByDefault">
            <summary>
            Gets or sets the MarkNewFilesSensitiveByDefault property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.MediaTranscription">
            <summary>
            Gets or sets the media transcription policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.MobileFriendlyUrlEnabledInTenant">
            <summary>
            Gets or sets a value to specify if user checks handle mobile friendly url
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.NoAccessRedirectUrl">
            <summary>
            When a site in the tenancy is locked it is redirected to this Url
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.NotificationsInOneDriveForBusinessEnabled">
            <summary>
            Gets or sets a value PushNotificationsEnabled in ODB
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.NotificationsInSharePointEnabled">
            <summary>
            Gets or sets a value PushNotificationsEnabled in SharePoint
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.NotifyOwnersWhenInvitationsAccepted">
            <summary>
            Gets or sets a value for owner notification accept
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.NotifyOwnersWhenItemsReshared">
            <summary>
            Gets or sets a value for owner notification reshare
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OCRAdminSiteListFileName">
            <summary>
            Gets or sets name of the file which contains the list which contains OCR for full text search enabled sites by the tenant admin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OCRComplianceSiteListFileName">
            <summary>
            Gets or sets name of the file which contains the list which contains OCR for full text search enabled sites by the compliance admin
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OCRModeForAdminSites">
            <summary>
            Gets or sets an enum value that specifies whether the tenant admin has enabled OCR on SharePoint sites for full text search through Syntex
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OCRModeForComplianceODBs">
            <summary>
            Gets or sets an enum value that specifies whether the compliance admin has enabled OCR for full text search through Syntex for ODBs
            </summary>
            <value>
            Disabled indicates that the OCR features should be disabled
            InclusionList indicates that the OCR features should be enabled and filter to include specific ODBs
            ExclusionList indicates that the OCR features should be enabled and filter to exclude specific ODBs
            </value>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OCRModeForComplianceSites">
            <summary>
            Gets or sets an enum value that specifies whether the compliance admin has enabled OCR for full text search through Syntex for SharePoint sites
            </summary>
            <value>
            Disabled indicates that the OCR features should be disabled
            InclusionList indicates that the OCR features should be enabled and filter to include specific sites
            ExclusionList indicates that the OCR features should be enabled and filter to exclude specific sites
            </value>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ODBAccessRequests">
            <summary>
            Gets or sets a value to specify if AccessRequests is On, Off or Unspecified for Onedrive for Business
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ODBMembersCanShare">
            <summary>
            Gets or sets a value to specify if MembersCanShare is On, Off or Unspecified for Onedrive for Business
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ODBSharingCapability">
            <summary>
            Gets or sets a value to Onedrive for Business sharing capability
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OfficeClientADALDisabled">
            <summary>
            Gets or sets the value if ADAL is disabled in the tenant for Office clients. True value means it is disabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveDefaultLinkToExistingAccess">
            <summary>
            Gets or sets default share link to existing access on OneDrive partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveDefaultShareLinkRole">
            <summary>
            Gets or sets default share link role on OneDrive partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveDefaultShareLinkScope">
            <summary>
            Gets or sets default share link scope on OneDrive partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveForGuestsEnabled">
            <summary>
            Gets or sets a value to specify if OneDriveForGuestUsers functionality is enabled for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveRequestFilesLinkEnabled">
            <summary>
            Gets or sets request files link enabled on OneDrive partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveRequestFilesLinkExpirationInDays">
            <summary>
            Gets or sets request files link expiration days on OneDrive partition
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OneDriveStorageQuota">
            <summary>
            The default OneDrive quota allocated to new OneDrive sites for the tenant's users
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OrgNewsSiteUrl">
            <summary>
            Gets or sets OrgNewsSiteUrl
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OrphanedPersonalSitesRetentionPeriod">
            <summary>
            Gets or Sets The default Retention Days set to Personal Sites for a tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.OwnerAnonymousNotification">
            <summary>
            Gets or sets a value for anonymous owner notification
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.PreventExternalUsersFromResharing">
            <summary>
            Gets or sets a value to specify if external users are allowed to reshare, regardless of Members Can Share state
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ProvisionSharedWithEveryoneFolder">
            <summary>
            Gets or Sets whether Onedrive for Business sites should have the Shared with Everyone folder automatically provisioned or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.PublicCdnAllowedFileTypes">
            <summary>
            Gets or sets a value to specify what file types can be exposed through Public CDN
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.PublicCdnEnabled">
            <summary>
            Gets or sets a value to specify whether Public CDN feature is enabled or disabled for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.PublicCdnOrigins">
            <summary>
            Gets a list of the Public CDN origins
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ReduceTempTokenLifetimeEnabled">
            <summary>
            Gets or sets whether Hashed Proof Token IP binding is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ReduceTempTokenLifetimeValue">
            <summary>
            Determines the grace period for Hashed Proof Tokens from an IP address that doesn't match the
            IP address in the token, when the IP policy is not enabled and IP Binding is enabled.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.RequireAcceptingAccountMatchInvitedAccount">
            <summary>
            Gets or sets a value to specify if user accepting invitation must use the same email address invitation was sent to
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.RequireAnonymousLinksExpireInDays">
            <summary>
            Gets or sets a value to specify what external sharing capabilities are available for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.RestrictedOneDriveLicense">
            <summary>
            Gets the info whether tenant has license for Restricted Onedrive for Business
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.RestrictedSharePointLicense">
            <summary>
            Gets the info whether tenant has license for Restricted SharePoint
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.RootSiteUrl">
            <summary>
            The tenant's root site url
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SearchResolveExactEmailOrUPN">
            <summary>
            Gets or sets the value if Search and resolve in People Picker use exact match on Email or UPN. False value means default behavior of "starts with" matching against common user properties
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SharingAllowedDomainList">
            <summary>
            Gets or sets list of allowed domains
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SharingBlockedDomainList">
            <summary>
            Gets or sets list of blocked domains
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SharingCapability">
            <summary>
            Gets or sets a value to specify what external sharing capabilities are available for the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SharingDomainRestrictionMode">
            <summary>
            Gets or sets the restriction mode
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowAllUsersClaim">
            <summary>
            Gets or sets the value if AllUsers claim is visible or not in people picker. False value means it is hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowEveryoneClaim">
            <summary>
            Gets or sets the value if Everyone claim is visible or not in people picker. False value means it is hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowEveryoneExceptExternalUsersClaim">
            <summary>
            Gets or sets the value if EveryoneExceptExternalUsers claim is visible or not in people picker. False value means it is hidden
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowOpenInDesktopOptionForSyncedFiles">
            <summary>
            Get/Set ShowOpenInDesktopOptionForSyncedFiles value
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowPeoplePickerGroupSuggestionsForIB">
            <summary>
            Gets or sets a value to handle if showing group suggestions for IB is supported
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ShowPeoplePickerSuggestionsForGuestUsers">
            <summary>
            Gets or sets a value that allows members to search all existing guest users in the directory.       
            When set to true, members can search all existing guest users in the directory.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SignInAccelerationDomain">
            <summary>
            Gets or sets a string which specifies the SignInAccelerationDomain
            </summary>
            <remarks>
            When set, end-user sign-in will skip the default sign-in page, and will take the user directly
            to the sign-in page on the ADFS sign-in (OnPremises Active Directory).
            To be used only by organizations that don’t have Guest Sign-ins enabled.
            When not set, the behavior of end-user sign-in will be the default behavior as it is today –
            i.e. the end user will be taken to the default sign-in page, and from there onward to ADFS sign-in.
            </remarks>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SocialBarOnSitePagesDisabled">
            <summary>
            Whether social bar on site pages is enabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SpecialCharactersStateInFileFolderNames">
            <summary>
            Gets or Sets a value to specify whether # and % are valid in file and folder names in SPO document libraries and OneDrive for Business
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StartASiteFormUrl">
            <summary>
            Gets or sets a string which specifies the URL of the form to load in the Start a Site dialog
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StopNew2010Workflows">
            <summary>
            Gets or sets a value to specify whether new 2010 workflows can be created
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StopNew2013Workflows">
            <summary>
            Gets or sets a value to specify whether new 2013 workflows can be created
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StorageQuota">
            <summary>
            Storage quota that is available for all sites in the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StorageQuotaAllocated">
            <summary>
            Storage quota that is allocated for all sites in the tenant
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StreamLaunchConfig">
            <summary>
            Gets or sets a value to specify the Stream launch tile URL in office.com
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StreamLaunchConfigLastUpdated">
            <summary>
            Gets last updated timestamp for StreamLaunchConfig property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.StreamLaunchConfigUpdateCount">
            <summary>
            Gets update count for StreamLaunchConfig property
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SyncAadB2BManagementPolicy">
            <summary>
            Gets or sets whether or not the AAD B2B management policy will be synced on the next request
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.SyncPrivacyProfileProperties">
            <summary>
            Gets or sets whether or not the synced tenant properties will be updated on the next request
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.TlsTokenBindingPolicyValue">
            <summary>
            Gets or sets the value of the TLS token binding policy
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.UseFindPeopleInPeoplePicker">
            <summary>
            Gets or sets a value to specify if use FindPeople in PeoplePicker
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.UsePersistentCookiesForExplorerView">
            <summary>
            Gets or sets a Boolean value that specifies whether ExplorerView feature uses persistent cookies
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.UserVoiceForFeedbackEnabled">
            <summary>
            Gets or sets a value to specify if User Voice for customer feedback is enabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ViewersCanCommentOnMediaDisabled">
            <summary>
            Whether viewers commenting on media items is disabled or not
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.ViewInFileExplorerEnabled">
            <summary>
            Gets or sets the value of the setting which enables users to view files in Explorer
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.WhoCanShareAllowListInTenant">
            <summary>
            Gets or sets a value to handle the tenant who can share settings
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.WhoCanShareAllowListInTenantByPrincipalIdentity">
            <summary>
            Gets: a list of PrincipalNames
            Example output: List of PrincipalNames. e.g. ["c:0-.f|rolemanager|contoso-all-users/35533f7d-4536-4c82-9dbc-352f9424578b"]
            Sets: take a list of principalNames
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.Workflow2010Disabled">
            <summary>
            Gets or sets a value to specify whether Workflow 2010 is disabled
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ITenantProperties.Workflows2013State">
            <summary>
            Gets whether 2013 workflows are configured and enabled for the tenant
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantProperties.UpdateAsync(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Updates the properties of this site collection
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ITenantProperties.Update(PnP.Core.Admin.Model.SharePoint.VanityUrlOptions)">
            <summary>
            Updates the properties of this site collection
            </summary>
            <param name="vanityUrlOptions">Optionally specify the custom vanity URI's used by this tenant</param>
            <returns></returns>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.IWebWithDetails">
            <summary>
            A SharePoint web with details reference
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.Id">
            <summary>
            The id of the site collection
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.Title">
            <summary>
            Title of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.Description">
            <summary>
            Description of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.ServerRelativeUrl">
            <summary>
            Server relative url of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.Language">
            <summary>
            Language of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.Url">
            <summary>
            Url of the web
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.WebTemplate">
            <summary>
            Gets the name of the site definition or site template that was used to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.WebTemplateConfiguration">
            <summary>
            Gets the web template configuration of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.TimeCreated">
            <summary>
            Date time when this site collection was created
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.LastItemModifiedDate">
            <summary>
            Date time when there was the last item modified
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.IWebWithDetails.LastItemUserModifiedDate">
            <summary>
            Date time when there was the list item modified by a user
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions">
            <summary>
            Contains the available options for creating a classic site collection (e.g. classic team site)
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions.#ctor(System.Uri,System.String,System.String,System.String,PnP.Core.Admin.Model.SharePoint.Language,PnP.Core.Admin.Model.SharePoint.TimeZone)">
            <summary>
            Default constuctor for creating a <see cref="T:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions"/> object used to define a classic site collection creation
            </summary>
            <param name="url">Url of the classic site collection to create</param>
            <param name="title">Title of the classic site collection to create</param>
            <param name="webTemplate">Web template of the classic site collection to create</param>
            <param name="siteOwnerLogin">Owner of the classic site collection to create</param>
            <param name="language">Language to use for the site</param>
            <param name="timeZone">Time zone of the classic site collection to create</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions.Title">
            <summary>
            Title of the classic site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions.Url">
            <summary>
            Url of the classic site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions.Owner">
            <summary>
            Owner of the classic site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ClassicSiteOptions.TimeZone">
            <summary>
            Time zone id for the classic site
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions">
            <summary>
            Generic site collection creation options that apply for all types of site collections that are backed by a Microsoft 365 group
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.#ctor(System.String,System.String)">
            <summary>
            Default constructor to configure the common options for group connected sites
            </summary>
            <param name="alias">Alias for the group to create</param>
            <param name="displayName">Display name for the group to create</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.Alias">
            <summary>
            Alias of the underlying Office 365 Group
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.DisplayName">
            <summary>
            The title of the site to create
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.IsPublic">
            <summary>
            Defines whether the Office 365 Group will be public (default), or private.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.Description">
            <summary>
            The description of the site to be created.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.Classification">
            <summary>
            The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.HubSiteId">
            <summary>
            The Guid of the hub site to be used. If specified will associate the modern team site to the hub site. (not applicable when application permissions are used)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.SensitivityLabelId">
            <summary>
            The Sensitivity label to use. See https://www.youtube.com/watch?v=NxvUXBiPFcw for more information. (not applicable when application permissions are used)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.SiteAlias">
            <summary>
            SiteAlias of the underlying Office 365 Group, i.e. the site part of the url: https://contoso.sharepoint.com/sites/&lt;SiteAlias&gt; (not applicable when application permissions are used)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonGroupSiteOptions.PreferredDataLocation">
            <summary>
            The geography in which to create the site collection. Only applicable to multi-geo enabled tenants
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions">
            <summary>
            Generic site collection creation options that apply for all types of site collections that are not backed by a Microsoft 365 group
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.#ctor(System.Uri,System.String)">
            <summary>
            Default constructor, sets url and title
            </summary>
            <param name="url">Url of the site to create</param>
            <param name="title">Title of the site to create</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.Url">
            <summary>
            The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.Title">
            <summary>
            The title of the site to create
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.Owner">
            <summary>
            The owner of the site. Reserved for future use.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.ShareByEmailEnabled">
            <summary>
            If set to true sharing files by email is enabled. Defaults to false.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.Classification">
            <summary>
            The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.Description">
            <summary>
            The description to use for the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.SiteDesignId">
            <summary>
            The Guid of the site design to be used.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.HubSiteId">
            <summary>
            The Guid of the hub site to be used. If specified will associate the communication site to the hub site
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonNoGroupSiteOptions.SensitivityLabelId">
            <summary>
            The Sensitivity label to use. See https://www.youtube.com/watch?v=NxvUXBiPFcw for more information.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CommonSiteOptions">
            <summary>
            Generic site collection creation options that apply for all types of site collections
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonSiteOptions.Language">
            <summary>
            The language to use for the site. 
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommonSiteOptions.WebTemplate">
            <summary>
            The Web template to use for the site.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions">
            <summary>
            Contains the available options for creating a communication site collection
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions.#ctor(System.Uri,System.String)">
            <summary>
            Default constuctor for creating a <see cref="T:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions"/> object used to define a communication site collection creation
            </summary>
            <param name="url">Url of the communication site to create</param>
            <param name="title">Title of the communication site to create</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CommunicationSiteOptions.SiteDesign">
            <summary>
            The built-in site design to used. If both SiteDesignId and SiteDesign have been specified, the GUID specified as SiteDesignId will be used.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions">
            <summary>
            Defines the information need to connect a group to an existing site
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Creates an ConnectSiteToGroupOptions class
            </summary>
            <param name="url">The url for the site to group connect</param>
            <param name="alias">Alias for the group that will be connected to the site</param>
            <param name="displayName">Name of the site</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions.Url">
            <summary>
            The url for the site to group connect
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions.KeepOldHomePage">
            <summary>
            If the site already has a modern home page, do we want to keep it?
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.ConnectSiteToGroupOptions.Owners">
            <summary>
            Set the owners of the group connected site. Specify the UPN values in a string array.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.CreationOptions">
            <summary>
            Options to control a creation flow
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CreationOptions.MaxStatusChecks">
            <summary>
            Number of times to check for provisioning complete status. Defaults to 12 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CreationOptions.WaitAfterStatusCheck">
            <summary>
            Defines the wait time in seconds after a status check. Defaults to 10 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.CreationOptions.UsingApplicationPermissions">
            <summary>
            The provisioning code will work differently if Application permissions are used. Defaults to live checking of the 
            current access token if not set.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions">
            <summary>
            Options to control the site collection creation flow
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions.WaitForAsyncProvisioning">
            <summary>
            Waits for the async provisioning options to be completed. Does not apply to classic site collection creation
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions.MaxAsyncProvisioningStatusChecks">
            <summary>
            Number of times to check for the async provisioning to be completed. Defaults to 80 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions.WaitAfterAsyncProvisioningStatusCheck">
            <summary>
            Defines the wait time in seconds after an async provisioning complete check. Defaults to 15 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions.WaitAfterCreation">
            <summary>
            Defines the wait time in seconds after the site collection creation call returns. If specified this overrides the <see cref="P:PnP.Core.Admin.Model.SharePoint.SiteCreationOptions.WaitForAsyncProvisioning"/> setting.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions">
            <summary>
            Contains the available options for creating a group connected team site collection
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.#ctor(System.String,System.String)">
            <summary>
            Default constuctor for creating a <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions"/> object used to define a team site collection creation
            </summary>
            <param name="alias">Alias for the group to create</param>
            <param name="displayName">Displayname for the group to create</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.Owners">
            <summary>
            Set the owners of the team site connected group. Specify the UPN values in a string array.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.Members">
            <summary>
            Set the members of the team site connected group. Specify the UPN values in a string array.
            Note: Only applicable when application permissions are used.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.SiteDesignId">
            <summary>
            The ID of the Site Design to apply, if any (not applicable when application permissions are used)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.AllowOnlyMembersToPost">
            <summary>
            If true, only group members can post conversations to the group. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.CalendarMemberReadOnly">
            <summary>
            If true, members can view the group calendar in Outlook but cannot make changes. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.ConnectorsDisabled">
            <summary>
            If true, changes made to the group in Exchange Online are not synced back to on-premises Active Directory. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.HideGroupInOutlook">
            <summary>
            If true, this group is hidden in Outlook experiences. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.SubscribeMembersToCalendarEventsDisabled">
            <summary>
            If true, members are not subscribed to the group's calendar events in Outlook. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.SubscribeNewGroupMembers">
            <summary>
            If true, group members are subscribed to receive group conversations. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.TeamSiteOptions.WelcomeEmailDisabled">
            <summary>
            If true, welcome emails are not sent to new members. Only applies when using application permissions to create the site.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.TeamSiteWithoutGroupOptions">
            <summary>
            Contains the available options for creating a team site collection without a group
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.SharePoint.TeamSiteWithoutGroupOptions.#ctor(System.Uri,System.String)">
            <summary>
            Default constuctor for creating a <see cref="T:PnP.Core.Admin.Model.SharePoint.TeamSiteWithoutGroupOptions"/> object used to define a team site collection creation
            </summary>
            <param name="url">Url of the team site without group</param>
            <param name="title">Title of the team site without group</param>
        </member>
        <member name="T:PnP.Core.Admin.Model.SharePoint.VanityUrlOptions">
            <summary>
            When you're using a vanity URL tenant you can specify your custom URLs here
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.VanityUrlOptions.PortalUri">
            <summary>
            Sets the vanity portal URL (e.g. https://portal.contoso.com)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.VanityUrlOptions.MySiteHostUri">
            <summary>
            Sets the vanity my site host URL (e.g. https://my.contoso.com)
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.SharePoint.VanityUrlOptions.AdminCenterUri">
            <summary>
            Sets the admin center URL (e.g. https://sharepointadmin.contoso.com)
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Teams.ITeamManager">
            <summary>
            Teams management features
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.Teams.ITeamManager.CreateTeamAsync(PnP.Core.Admin.Model.Teams.TeamOptions,PnP.Core.Admin.Model.Teams.TeamCreationOptions)">
            <summary>
            Creates a Teams team and returns a <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created Team
            </summary>
            <param name="teamToCreate">Information about the Team to create</param>
            <param name="creationOptions">Options to control the Team creation flow</param>
        </member>
        <member name="M:PnP.Core.Admin.Model.Teams.ITeamManager.CreateTeam(PnP.Core.Admin.Model.Teams.TeamOptions,PnP.Core.Admin.Model.Teams.TeamCreationOptions)">
            <summary>
            Creates a Teams team and returns a <see cref="T:PnP.Core.Services.PnPContext"/> to start using the created Team
            </summary>
            <param name="teamToCreate">Information about the Team to create</param>
            <param name="creationOptions">Options to control the Team creation flow</param>
        </member>
        <member name="T:PnP.Core.Admin.Model.Teams.TeamCreationOptions">
            <summary>
            Options to control the Teams creation flow
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Teams.TeamCreationOptions.MaxStatusChecks">
            <summary>
            Number of times to check for provisioning complete status. Defaults to 12 if not set.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.Model.Teams.TeamCreationOptions.WaitAfterStatusCheck">
            <summary>
            Defines the wait time in seconds after a status check. Defaults to 10 if not set.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Teams.TeamForGroupOptions">
            <summary>
            Options to configure the created Team
            </summary>
        </member>
        <member name="M:PnP.Core.Admin.Model.Teams.TeamForGroupOptions.#ctor(System.Guid)">
            <summary>
            Default constructor used for creating a Team
            </summary>
            <param name="groupId">Id of the Microsoft 365 group to create the Team for</param>
        </member>
        <member name="P:PnP.Core.Admin.Model.Teams.TeamForGroupOptions.GroupId">
            <summary>
            Id of the Microsoft 365 group to create the Team for
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Model.Teams.TeamOptions">
            <summary>
            Options to configure the created Team
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.PnPAdminConstants">
            <summary>
            Support class to provide all the constants for the admin operations
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.CommunicationSiteTemplate">
            <summary>
            Web template of a communication site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.TeamSiteTemplate">
            <summary>
            Web template of a group connected team site
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.TeamSiteWithoutGroupTemplate">
            <summary>
            Web template of a team site without a group
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.CsomTenantObject">
            <summary>
            Identifier for the CSOM Tenant object
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.CommunicationSiteDesignTopic">
            <summary>
            Topic site design id for communication sites
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.CommunicationSiteDesignShowCase">
            <summary>
            Showcase site design id for communication sites
            </summary>
        </member>
        <member name="F:PnP.Core.Admin.PnPAdminConstants.CommunicationSiteDesignBlank">
            <summary>
            Blank site design id for communication sites
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.PnPCoreAdminResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_AppManager_AppCatalogNotFound">
            <summary>
              Looks up a localized string similar to Tenant app catalog site is not found. Create it either manually or using the corresponding method from the App Manager class..
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_AppManager_FileNotFound">
            <summary>
              Looks up a localized string similar to File not found.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_AppManager_GetAppTimeout">
            <summary>
              Looks up a localized string similar to Timeout occurred while trying to get the App metadata from the server.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_AppManager_NotResolved">
            <summary>
              Looks up a localized string similar to Unable to resolve the AppManager for the type: {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_MissingVanityUrlDetails">
            <summary>
              Looks up a localized string similar to Your tenant is using vanity URLs and therefore you have to specify a filled VanityUrlOptions instance in all methods that accept that optional parameter.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_SiteCreation">
            <summary>
              Looks up a localized string similar to The site creation for site {0} did not succeed. Returned siteStatus = {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_SiteCreationStatusCheck">
            <summary>
              Looks up a localized string similar to Checking for the status of site creation for site {0} did fail. Last returned siteStatus = {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_SiteRestore_NotFound">
            <summary>
              Looks up a localized string similar to Site to restore ({0}) not found.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_TeamCreation">
            <summary>
              Looks up a localized string similar to The Team creation for group {0} did not succeed. Check the inner exception for details..
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_UnexpectedJson">
            <summary>
              Looks up a localized string similar to Unexpected JSON.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_Unsupported_InvalidDesignPackageId">
            <summary>
              Looks up a localized string similar to Please specify a valid design package id: 96c933ac-3698-44c7-9f4a-5fd17d71af9e (Topic), 6142d2a0-63a5-4ba0-aede-d9fefca2c767 (Showcase) or f6cc5403-0d63-442e-96c0-285923709ffc (Blank).
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_Unsupported_SiteHasToBeGroupConnected">
            <summary>
              Looks up a localized string similar to The site collection has to be connected to a Microsoft 365 group.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Exception_VanityUrl">
            <summary>
              Looks up a localized string similar to Vanity urls are currently not handled..
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Log_Information_ExceptionWhileGettingSharePointAdmins">
            <summary>
              Looks up a localized string similar to Following exception was eaten while getting the tenant admins: {0}.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Log_Warning_ExceptionWhileCreatingTeamForGroup">
            <summary>
              Looks up a localized string similar to Following exception was eaten while creating a Team for group {0} : {1}.
            </summary>
        </member>
        <member name="P:PnP.Core.Admin.PnPCoreAdminResources.Log_Warning_ExceptionWhileGettingSiteStatus">
            <summary>
              Looks up a localized string similar to Following exception was eaten while getting the status of the site creation of {0} : {1}.
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Services.Core.CSOM.Requests.ServicePrincipal.ApprovePermissionRequest">
            <summary>
            Based upon the Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal CSOM Request
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Services.Core.CSOM.Requests.ServicePrincipal.DenyPermissionRequest">
            <summary>
            Based upon the Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal CSOM Request
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Services.Core.CSOM.Requests.ServicePrincipal.GetPermissionRequestsRequest">
            <summary>
            Based upon the Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal CSOM Request
            </summary>
        </member>
        <member name="T:PnP.Core.Admin.Services.Core.CSOM.Requests.ServicePrincipal.SetServicePrincipalRequest">
            <summary>
            Based upon the Microsoft.Online.SharePoint.TenantAdministration.Internal.SPOWebAppServicePrincipal CSOM Request
            </summary>
        </member>
    </members>
</doc>
